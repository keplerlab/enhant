(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['dashboard'] = template({"1":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Average Sentiment</span>\n        </div>\n        <div class=\"row card-cell\">\n            <img width=\"112\" height=\"112\" id=\"average-sentiment\" src=\"public/img/dissatisfied_sentiment.svg\">\n        </div>\n    </div>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Average Engagement</span>\n        </div>\n        <div class=\"row card-cell\">\n            <div class=\"GaugeMeter\" style=\"margin: auto\"></div>\n        </div>\n\n         <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\" id=\"average-engagement\"></span>\n        </div>\n    </div>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section recording\">\n        </div>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "         <div class=\"chart-container\" style=\"display: none;height:300px;margin-top:20px;\">\n            <canvas id=\"chart\" height=\"200px;\"></canvas>\n        </div>\n";
},"9":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section bookmark has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Bookmarks</span>\n                        </div>\n                    </div>\n\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"bookmark-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"11":function(container,depth0,helpers,partials,data) {
    return "       <div class=\"section images has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Captured Moments</span>\n                        </div>\n                    </div>\n                    <div class=\"clearfix capture-moments-data\" style=\"margin-top:5%;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"13":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section\">\n            <div class=\"clearfix\">\n                <div class=\"col-xs-6 notes has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-4\">\n                                <span class=\"cell-text inter-bold-21\">Notes</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"notes-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                <div class=\"col-xs-6 questions has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-4\">\n                                <span class=\"cell-text inter-bold-21\">Questions</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"questions-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"15":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"notes") : stack1),{"name":"if","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":235,"column":8},"end":{"line":253,"column":15}}})) != null ? stack1 : "")
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"questions") : stack1),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":254,"column":8},"end":{"line":272,"column":15}}})) != null ? stack1 : "");
},"16":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section notes has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Notes</span>\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"notes-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"18":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section questions has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Questions</span>\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"questions-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"20":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section outliers has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Sentiment Outliers\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"outliers-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<style>\n    .card{\n        height: 296px;\n        margin-left: 6%;\n    }\n\n    .card-cell{\n        margin-top: 32px;\n    }\n\n    .cell-text{\n        font-size: 20px;\n        word-break: break-all;\n    }\n\n    .section{\n        margin-top: 2%;\n    }\n\n    .has-padding{\n        padding: 5%;\n    }\n\n    .table-responsive{\n        overflow-y: scroll;\n        height: 200px;\n    }\n\n    .inter-regular-16{\n        font-family: \"Inter-Regular\";\n        font-size: 16px;\n    }\n\n    .inter-bold-21{\n        font-family: \"Inter-Bold\";\n        font-size: 21px;\n    }\n\n    .inter-bold-16{\n        font-family: \"Inter-Bold\";\n        font-size: 16px;\n    }\n</style>\n\n<style>\n    .GaugeMeter{\n	Position:        Relative;\n	Text-Align:      Center;\n	Overflow:        Hidden;\n	Cursor:          Default;\n}\n\n.GaugeMeter SPAN,\n    .GaugeMeter B{\n    	Margin:          0 23%;\n    	Width:           54%;\n    	Position:        Absolute;\n    	Text-align:      Center;\n    	Display:         Inline-Block;\n    	Color:           RGBa(0,0,0,.8);\n    	Font-Weight:     100;\n    	Font-Family:     \"Open Sans\", Arial;\n    	Overflow:        Hidden;\n    	White-Space:     NoWrap;\n    	Text-Overflow:   Ellipsis;\n}\n.GaugeMeter[data-style=\"Semi\"] B{\n	Margin:          0 10%;\n	Width:           80%;\n}\n\n.GaugeMeter S,\n    .GaugeMeter U{\n    	Text-Decoration: None;\n    	Font-Size:       .5em;\n    	Opacity:         .5;\n}\n\n.GaugeMeter B{\n	Color:           Black;\n	Font-Weight:     300;\n	Font-Size:       .5em;\n	Opacity:         .8;\n}\n</style>\n\n<div class=\"row section\">\n    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Call Duration</span>\n        </div>\n        <div class=\"row card-cell\">\n            <img width=\"112\" height=\"112\" src=\"public/img/clock.svg\">\n        </div>\n\n         <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\" id=\"call-duration\"></span>\n        </div>\n    </div>\n\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"avg_sentiment") : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":101,"column":5},"end":{"line":110,"column":11}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"avg_engagement") : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":112,"column":4},"end":{"line":125,"column":11}}})) != null ? stack1 : "")
    + "\n\n</div>\n\n<div class=\"clearfix section has-shadow\">\n    <div class=\"col-xs-12 meeting-data-container has-padding\">\n        <div class=\"meeting-info\">\n            <div class=\"row\">\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-21\">Meeting</span>\n                </div>\n            </div>\n\n            <div class=\"row\" style=\"margin-top: 2%;\">\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-date\">Date: </span>\n                </div>\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-time\">Start Time: </span>\n                </div>\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-duration\">Duration: </span>\n                </div>\n            </div>\n        </div>\n\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"recording") : stack1),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.program(7, data, 0),"data":data,"loc":{"start":{"line":152,"column":8},"end":{"line":159,"column":15}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"bookmark") : stack1),{"name":"if","hash":{},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":161,"column":8},"end":{"line":180,"column":15}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"images") : stack1),{"name":"if","hash":{},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":182,"column":8},"end":{"line":196,"column":15}}})) != null ? stack1 : "")
    + "    \n    \n"
    + ((stack1 = (lookupProperty(helpers,"CheckIfbothTrue")||(depth0 && lookupProperty(depth0,"CheckIfbothTrue"))||container.hooks.helperMissing).call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"notes") : stack1),((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"questions") : stack1),{"name":"CheckIfbothTrue","hash":{},"fn":container.program(13, data, 0),"inverse":container.program(15, data, 0),"data":data,"loc":{"start":{"line":199,"column":8},"end":{"line":273,"column":28}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"sentiment_outliers") : stack1),{"name":"if","hash":{},"fn":container.program(20, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":275,"column":8},"end":{"line":293,"column":15}}})) != null ? stack1 : "")
    + "    </div>\n</div>\n\n<script src=\"public/scripts/GaugeMeter.js\"></script>\n<script src=\"public/scripts/moment.js\"></script>\n<script src=\"public/scripts/Chart.js\"></script>\n<script>\n\n    function generateMeetingDate(start_time){\n        var date = new Date(start_time);\n        var formatted_months = (\"0\" + (date.getMonth()+1)).slice(-2).toString();\n        var formatted_yy = (\"0\" + date.getFullYear()).slice(-4).toString();\n        var formatted_dd = (\"0\" + date.getDate()).slice(-2).toString();\n\n        var formatted_hh = (\"0\" + date.getHours()).slice(-2).toString();\n        var formatted_mm = (\"0\" + date.getMinutes()).slice(-2).toString();\n\n        return {\n            \"date\" : formatted_yy + \"/\" + formatted_months + \"/\" + formatted_dd,\n            \"time\": formatted_hh + \":\" + formatted_mm\n        }\n    }\n\n    function getMeetingDuration(start_time, end_time){\n        var diff = end_time - start_time;\n        var ms = diff % 1000;\n        diff = (diff - ms) / 1000;\n        var ss = diff % 60;\n        diff = (diff - ss) / 60;\n        var mm = diff % 60;\n        diff = (diff - mm) / 60;\n        var hh = diff % 24;\n        days = (diff - hh) / 24;\n\n        var formatted_hh = (\"0\" + hh).slice(-2).toString();\n        var formatted_mm = (\"0\" + mm).slice(-2).toString();\n        var formatted_ss = (\"0\" + ss).slice(-2).toString();\n        var formatted_ms = (\"0\" + ms + \"0\").slice(-3).toString();\n\n        return formatted_hh + \":\" + formatted_mm + \":\" + formatted_ss;\n    }\n\n    function updateMeetingData(zip){\n        var start_time_data = generateMeetingDate(zip.start_time);\n        var meeting_date = start_time_data.date;\n        var meeting_start_time = start_time_data.time;\n        var meeting_duration = getMeetingDuration(zip.start_time, zip.end_time);\n\n        $('#meeting-date').text(\"Date: \" + meeting_date);\n        $('#meeting-time').text(\"Start Time: \" + meeting_start_time);\n        $('#meeting-duration').text(\"Duration: \" + meeting_duration);\n    }\n\n    function updateBookmarks(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"bookmark\"});\n\n        var bookmark_html = \"\";\n        data.forEach(function(obj){\n\n            var bookmark_arr = obj.content;\n            var row_html = \"\";\n\n            var host_transcription = bookmark_arr.filter(function(d){return d[\"origin\"] == \"host\"});\n            var guest_transcription = bookmark_arr.filter(function(d){return d[\"origin\"] == \"guest\"});\n\n            if (!host_transcription.length && !guest_transcription.length){\n\n                var row_data = bookmark_arr[0];\n\n                row_html = \"<tr>\" +\n                    \"<td>\" + row_data.content + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, obj.event_time)+ \"</td></tr>\"; \n                \n                bookmark_html += row_html;\n            \n            }\n            else{\n\n                var host_final = \"Host: \"; \n                var guest_final = \"Guest: \";\n\n                host_transcription.forEach(function(hd){\n                    host_final += hd.content;\n                });\n\n                guest_transcription.forEach(function(gd){\n                   guest_final += gd.content;\n                });\n\n                var final_bookmark_text = \"\";\n\n                if (host_transcription.length){\n                    final_bookmark_text += host_final;\n                    final_bookmark_text += \"<br>\";\n                }\n                if (guest_transcription.length){\n                    final_bookmark_text += guest_final;\n                }\n\n                row_html += \"<tr>\" +\n                    \"<td>\" + final_bookmark_text + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, obj.event_time)+ \"</td></tr>\";\n\n                bookmark_html += row_html;\n\n            }\n        });\n\n        $('.bookmark-data-tbody').html(bookmark_html);\n\n    }\n\n    function updateNotes(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"notes\"});\n\n        data.forEach(function(d){\n            var row_html = \"<tr>\" +\n                    \"<td>\" + d.content + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, d.event_time)+ \"</td></tr>\";\n            \n            $('.notes-data-tbody').append(row_html);\n        });\n    }\n\n    function updateCapturedImages(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"image\"});\n\n        data.forEach(function(d){\n            var html = \"<div class='col-md-3 has-shadow' style='margin-left:5%'>\" +\n                \"<div><img style='max-width:100%;max-height:100%' src='\" + d.content + \"'>\" +\n                \"</div>\" +\n                \"<div class='text-center has-padding inter-regular-16' style='margin-top:5%'>\" + getMeetingDuration(zip.start_time, d.event_time) +\n                \"</div>\"; \n\n            $('.capture-moments-data').append(html);\n        });\n    }\n\n    function updateQuestions(zip){\n\n        if (zip.hasOwnProperty(\"questionsAsked\")){\n            var data = zip.questionsAsked;\n\n            data.forEach(function(d){\n\n                // add number of milliseconds to the start time\n                var end_time = zip.start_time + d.time;\n                var elapsed_time = getMeetingDuration(zip.start_time, end_time);\n\n                var row_html = \"<tr>\" +\n                        \"<td>\" + d.question + \"</td>\" +\n                        \"<td>\" + elapsed_time + \"</td></tr>\";\n                \n                $('.questions-data-tbody').append(row_html);\n                    \n            });\n        }\n    }\n\n    function updateSentimentOutliers(zip){\n\n        if (zip.hasOwnProperty(\"highSentimentSentences\")){\n            var highSentimentOutliers = zip.highSentimentSentences.highSentimentSentencesGuest;\n            var lowSentimentOutliers = zip.lowSentimentSentences.lowSentimentSentencesGuest;\n\n            var final_arr = [];\n            final_arr.push(...highSentimentOutliers);\n            final_arr.push(...lowSentimentOutliers);\n\n            // sort the final array\n            final_arr.sort(function(a, b){\n                var et_a = zip.start_time + a[0];\n                var et_b = zip.start_time + b[0];\n\n                return et_a - et_b;\n            })\n\n            var sentiment_outlier_html = \"\";\n\n            final_arr.forEach(function(d){\n\n                // add number of milliseconds to the start time\n                var end_time = zip.start_time + d[0];\n                var elapsed_time = getMeetingDuration(zip.start_time, end_time);\n\n                var row_html = \"<tr>\" +\n                        \"<td>\" + d[1] + \"</td>\" +\n                        \"<td>\" + elapsed_time + \"</td></tr>\";\n                \n                $('.outliers-data-tbody').append(row_html);\n\n            });\n        }\n        \n    }\n\n    function updateCallDuration(zip){\n        var duration = getMeetingDuration(zip.start_time,zip.end_time);\n        var duration_arr = duration.split(\":\");\n\n        var hh = duration_arr[0];\n        var mm = duration_arr[1];\n        var ss = duration_arr[2];\n\n        // check if hours is 0\n        if (hh == \"00\"){\n\n            // check if min is 0\n            if (mm == \"00\"){\n                var text = ss + \" \" + \"sec\";\n                $('#call-duration').text(text);\n            }\n            else{\n                var text = mm + \" \" +\"min\" + \" \" + ss + \" \" +\"sec\";\n                $('#call-duration').text(text);\n            }\n        }\n        else{\n\n            if (mm == \"00\"){\n                var text = hh + \" \" +\"hrs\";\n                $('#call-duration').text(text);\n            }\n            else{\n                var text = hh + \" \" +\"hrs\" + \" \" + mm + \" \" +\"min\";\n                $('#call-duration').text(text);\n            }\n        }\n    }\n\n    function updateAverageEngagementScore(zip){\n\n        if (zip.hasOwnProperty(\"engagement_scores\")){\n\n            var averageScore = zip.engagement_scores.avg_engagement_score;\n\n            $(\".GaugeMeter\").gaugeMeter({\n                \"percent\": averageScore,\n                \"text\": null,\n                \"text_size\": 0.0,\n                \"prepend\": null,\n                \"append\": \"%\",\n                \"size\": \"112\",\n                \"width\": \"12\",\n                \"style\": \"Full\",\n                \"color\": \"#1E90FF\",\n                \"back\": \"#E6E6E6\",\n                \"theme\": null,\n                \"animate_gauge_colors\": false,\n                \"animate_text_colors\":  false,\n                \"label\": null,\n                \"label_color\": null,\n                \"stripe\": null\n            });\n\n            // this is to remove the text within gauge meter\n            $(\".GaugeMeter span\").remove();\n\n            $('#average-engagement').text(averageScore + \" %\");\n        }\n\n    }\n\n    function updateAverageSentiment(zip){\n\n        if (zip.hasOwnProperty(\"avgSentimentScoreGuest\")){\n\n            var sentiment = Number(zip.avgSentimentScoreGuest);\n            if (sentiment <= 0.2){\n                $('#average-sentiment').attr(\"src\", \"public/img/dissatisfied_sentiment.svg\");\n            }\n            else if (sentiment > 0.2 && sentiment < 0.7){\n                $('#average-sentiment').attr(\"src\", \"public/img/neutral_sentiment.svg\");\n            }\n            else{\n                $('#average-sentiment').attr(\"src\", \"public/img/satisfied_sentiment.svg\");\n            }\n\n        }\n    }\n\n    function createLineChart(zip){\n        var data = [];\n        var meeting_start_time = zip.start_time;\n        var meeting_end_time = zip.end_time;\n        var samplingRate_in_ms = 10 * 1000; // 10 seconds\n\n        var  datasets = [];\n        var sentimentData = [];\n\n        var ctx = document.getElementById(\"chart\").getContext('2d');\n\n        if (zip.hasOwnProperty(\"engagement_scores\")){\n\n            var d = zip.engagement_scores.engagement_scores;\n            var ed = d.map(function(r) { return { \"x\" : new Date(meeting_start_time + r[0]), \"y\" : r[1]} });\n\n            var engagementData = {\n                label: \"Engagement Score\",\n                data: ed,\n                borderColor: '#1E90FF',\n                fill: false\n            }\n\n            datasets.push(engagementData);\n        }\n\n        if (zip.hasOwnProperty(\"highSentimentSentences\") || zip.hasOwnProperty(\"highSentimentSentences\")){\n            \n            sentimentData.push(...zip.highSentimentSentences.highSentimentSentencesGuest);\n            sentimentData.push(...zip.lowSentimentSentences.lowSentimentSentencesGuest);\n\n            // sort the final array\n            sentimentData.sort(function(a, b){\n                var et_a = meeting_start_time + a[0];\n                var et_b = meeting_start_time + b[0];\n\n                return et_a - et_b;\n            });\n\n            var ed = sentimentData.map(function(r) { return { \"x\" : new Date(meeting_start_time + r[0]), \"y\" : Math.round(r[2]*100)} });\n\n            var sentimentData = {\n                label: \"Sentiment Score\",\n                data: ed,\n                borderColor: '#8FC8FF',\n                fill: false\n            }\n\n            datasets.push(sentimentData);\n\n        }\n\n        if (datasets.length){\n            $(\".chart-container\").show();\n\n            var lineChart = new Chart(ctx, {\n                type: 'line',\n                data: { datasets: datasets },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        xAxes: [{\n                            type: 'time',\n                            time: {\n                                unit: 'minute',\n                                stepSize: 10\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }]\n                    }\n                }\n            });\n        }\n    }\n\n    function reset(){\n        $('.outliers-data-tbody').html(\"\");\n        $('.questions-data-tbody').html(\"\");\n        $('.notes-data-tbody').html(\"\");\n        $('.bookmark-data-tbody').html(\"\");\n        $('.capture-moments-data').html(\"\");\n    }\n\n    function processData(data){\n        updateMeetingData(data);\n        updateBookmarks(data);\n        updateCapturedImages(data);\n        updateNotes(data);\n        updateQuestions(data);\n        updateSentimentOutliers(data);\n\n        updateCallDuration(data);\n        updateAverageEngagementScore(data);\n        updateAverageSentiment(data);\n    }\n\n    window.addEventListener(\"dashboard-data\", function(evt){\n        var data = evt.detail;\n\n        console.log(\" dashboard data : \", data);\n\n        var zip_data = data.zip;\n        var recording_data = data.recording;\n        var notes_data = data.notes;\n\n        reset();\n\n        if (!isEmpty(zip_data)){\n            processData(zip_data);\n\n            // if recording url is null, create a chart and show here\n            if (recording_data.url == null){\n                createLineChart(zip_data);\n            }\n            \n            \n        }\n        else if (!isEmpty(notes_data)){\n            processData(notes_data);\n        }\n\n        if (recording_data.url !== null){\n\n            const mediaPlayerTemplate = Handlebars.templates.mediaPlayer;\n            const media_html = mediaPlayerTemplate({\n                \"url\": recording_data.url\n            });\n            $('.recording').html(media_html);\n\n             // forward message to dashboard\n            var event = new CustomEvent(\"initializePlayer\", {\n                detail: data\n            });\n            window.dispatchEvent(event);\n\n        }\n\n    });\n</script>";
},"useData":true});
templates['mediaPlayer'] = template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<style>\n\n.player {\n  position: relative;\n  font-size: 0;\n  overflow: hidden;\n  padding-right: 0px;\n  padding-left: 0px;\n}\n\n.player__button {\n  background:none;\n  border:0;\n  line-height:1;\n  color:white;\n  text-align: center;\n  outline:0;\n  padding: 0;\n  cursor:pointer;\n  max-width:50px;\n}\n\n.player__controls {\n  position: absolute;\n  width: 100%;\n  height: 50px;\n  transition:all .3s;   \n  flex-wrap:wrap;\n  background:rgba(0,0,0,0.1);\n  margin-top: -50px;\n}\n\n.progress {\n  flex:10;\n  position: relative;\n  display:flex;\n  flex-basis:100%;\n  margin-bottom: 0px;\n  height:16px;\n  transition:height 0.3s;\n  background:white;\n  border-radius:15px;\n  border:2px solid white;\n  padding-left: 0px;\n  padding-right: 0px;\n  cursor:pointer;\n  margin-top: 8px;\n}\n\n.progress__filled {\n  width:50%;\n  background:#1E90FF;\n  flex:0;\n  flex-basis:0.5%;\n}\n\n.markers{\n    margin-top: -70px;\n    display: flex;\n    height: 20px;\n    overflow: hidden;\n}\n\n.progress__time{\n    color: white;\n    font-family: \"Inter-Regular\";\n    font-size: 16px;\n    margin-top:4px;\n}\n\n.settings-container{\n    background-color: white;\n    color: black;\n    font-family: \"Inter-Regular\";\n    font-size: 14px;\n    border-radius: 4px;\n    width: 264px;\n    height:102px;\n    position: absolute;\n    right: 10px;\n    bottom:75px;\n}\n\n</style>\n\n<div class=\"row\">\n    <div class=\"col-xs-12 player\">\n        <video width=\"100%\" height=\"100%\" class=\"viewer\" id=\"recording-video\" src=\""
    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,"url") || (depth0 != null ? lookupProperty(depth0,"url") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"url","hash":{},"data":data,"loc":{"start":{"line":88,"column":83},"end":{"line":88,"column":90}}}) : helper)))
    + "\"></video>\n\n        <div class=\"settings-container\" state=\"inactive\" style=\"display: none;\">\n            <div class=\"clearfix\">\n                <div class=\"form-group\" style=\"margin-top:4%;margin-bottom:4%;\">\n                    <div class=\"col-xs-10\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input custom-checkbox\" type=\"checkbox\" id=\"show-metrics\" checked>\n                            <label class=\"form-check-label\" for=\"show-metrics\">\n                            Show call metrics\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clearfix\">\n                <div class=\"form-group\" style=\"margin-top:4%;margin-bottom:4%;\">\n                    <label  style=\"margin-top:6px;\" class=\"col-xs-5 col-form-label\" for=\"setting-time-offset\">Time offset: </label>\n                    <div class=\"col-xs-5\" style=\"padding-left: 0px;padding-right:0px;\">\n                        <input id=\"setting-time-offset\" placeholder=\"hh:mm:ss\" type=\"text\" class=\"form-control\">\n                    </div>\n\n                    <img id=\"video-settings-apply\" style=\"cursor:pointer;margin-left:8px;margin-top:6px\" width=\"24\" height=\"24\" src=\"public/img/check.svg\">\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"chart-container\" style=\"display: none;height:300px;margin-top:20px;\">\n            <canvas id=\"chart\" height=\"200px;\"></canvas>\n        </div>\n\n        <div class=\"clearfix marker-container\">\n            <div class=\"markers col-xs-8 col-xs-offset-1\"></div>\n        </div>\n\n        <div class=\"player__controls clearfix\">\n            <icon style=\"cursor: pointer;text-align:center\" class=\"toggle col-xs-1\">\n                <img width=\"32\" height=\"32\" src=\"public/img/play.svg\">\n            </icon>\n            <div class=\"progress col-xs-8\">\n                <div class=\"progress__filled\"></div>\n            </div>\n\n            <div class=\"col-xs-2 progress__time\">\n                <span class=\"progress__time__current_time\">00:00:00</span>\n                <span> / </span>\n                <span class=\"progress__time__duration\">00:00:00</span>\n            </div>\n\n            <div class=\"col-xs-1\">\n                <icon class=\"video-settings\" style=\"cursor:pointer; text-align:center;\" inactive>\n                    <img width=\"20\" height=\"30\" src=\"public/img/settings.svg\">\n                </icon>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n\n    function createLineChart(zip){\n        var data = [];\n        var meeting_start_time = zip.start_time;\n        var meeting_end_time = zip.end_time;\n        var samplingRate_in_ms = 10 * 1000; // 10 seconds\n\n        var  datasets = [];\n        var sentimentData = [];\n\n        var ctx = document.getElementById(\"chart\").getContext('2d');\n\n        if (zip.hasOwnProperty(\"engagement_scores\")){\n\n            var d = zip.engagement_scores.engagement_scores;\n            var ed = d.map(function(r) { return { \"x\" : new Date(meeting_start_time + r[0]), \"y\" : r[1]} });\n\n            var engagementData = {\n                label: \"Engagement Score\",\n                data: ed,\n                borderColor: '#1E90FF',\n                fill: false\n            }\n\n            datasets.push(engagementData);\n        }\n\n        if (zip.hasOwnProperty(\"highSentimentSentences\") || zip.hasOwnProperty(\"highSentimentSentences\")){\n            \n            sentimentData.push(...zip.highSentimentSentences.highSentimentSentencesGuest);\n            sentimentData.push(...zip.lowSentimentSentences.lowSentimentSentencesGuest);\n\n            // sort the final array\n            sentimentData.sort(function(a, b){\n                var et_a = meeting_start_time + a[0];\n                var et_b = meeting_start_time + b[0];\n\n                return et_a - et_b;\n            });\n\n            var ed = sentimentData.map(function(r) { return { \"x\" : new Date(meeting_start_time + r[0]), \"y\" : Math.round(r[2]*100)} });\n\n            var sentimentData = {\n                label: \"Sentiment Score\",\n                data: ed,\n                borderColor: '#8FC8FF',\n                fill: false\n            }\n\n            datasets.push(sentimentData);\n\n        }\n\n        if (datasets.length){\n            $(\".chart-container\").show();\n\n            var lineChart = new Chart(ctx, {\n                type: 'line',\n                data: { datasets: datasets },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        xAxes: [{\n                            type: 'time',\n                            display: false\n                        }]\n                    }\n                }\n            });\n        }\n    }\n\n    class MediaPlayer{\n        constructor(conf){\n\n            this.pause_icon = \"public/img/play.svg\";\n            this.play_icon = \"public/img/stop.svg\";\n\n            this.conf = conf;\n\n            this.player = document.querySelector('.' + this.conf.player_cls);\n            this.video = this.player.querySelector('.' + this.conf.video_cls);\n            this.progress_container = this.player.querySelector('.' + this.conf.progress_container_cls);\n            this.progress_filled_container = this.player.querySelector('.' + this.conf.progress_filled_container_cls);\n            this.toggle_icon = this.player.querySelector('.' + this.conf.toggle_cls); \n            this.marker_cls = this.player.querySelector('.' + this.conf.marker_cls);\n\n            this.settings_icon = $('.' + this.conf.settings.icon_cls);\n            this.settings_icon_container = $(\".\" + this.conf.settings.container_cls);\n            this.settings_icon_time_offset = $(\"#\" + this.conf.settings.offset_id);\n            this.settings_icon_show_metric = $(\"#\" + this.conf.settings.metric_id);\n            this.settings_apply_icon = $(\"#\" + this.conf.settings.apply_icon);\n\n            this.settings_offset_value = \"\";\n            this.show_metrics = true;\n        }\n\n        getVideo(){\n            return this.video;\n        }\n\n        settingsToggle(){\n            var current_state = this.settings_icon_container.attr(\"state\");\n            if (current_state == \"active\"){\n                this.settings_icon_container.hide();\n                this.settings_icon_container.attr(\"state\", \"inactive\");\n            }\n            else {\n                this.settings_icon_container.show();\n                this.settings_icon_container.attr(\"state\", \"active\");\n            }\n        }\n\n        play(){\n            this.video.play();\n        }\n\n        pause(){\n            this.video.pause();\n        }\n\n        updatePlayPauseButtonIcon(play){\n\n            if (play){\n                $('.' + this.conf.toggle_cls + \" img\").attr(\"src\", this.play_icon);\n            }\n            else{\n                $('.' + this.conf.toggle_cls + \" img\").attr(\"src\", this.pause_icon);\n            }\n        }\n\n        togglePlay(){\n\n            if (this.video.paused){\n                this.play();\n                this.updatePlayPauseButtonIcon(true);\n            }\n            else{\n                this.pause();\n                this.updatePlayPauseButtonIcon(false);\n            }\n        }\n\n        formatTime(seconds){\n            var diff = seconds;\n            var ss = diff % 60;\n            diff = (diff - ss) / 60;\n            var mm = diff % 60;\n            diff = (diff - mm) / 60;\n            var hh = diff % 24;\n\n            var formatted_hh = (\"0\" + hh).slice(-2).toString();\n            var formatted_mm = (\"0\" + mm).slice(-2).toString();\n            var formatted_ss = (\"0\" + Math.round(ss)).slice(-2).toString();\n\n            return formatted_hh + \":\" + formatted_mm + \":\" + formatted_ss;\n           \n        }\n\n        progressClickedHandler(e){\n            const scrubTime = (e.offsetX / this.progress_container.offsetWidth) * this.video.duration;\n            this.video.currentTime = scrubTime;\n\n            this.showVideoCurrentTime();\n        }\n\n        videoTimeUpdated(){\n            const percent = (this.video.currentTime / this.video.duration) * 100; \n            this.progress_filled_container.style.flexBasis = `${percent}%`;\n\n            this.showVideoCurrentTime();\n        }\n\n        showVideoCurrentTime(){\n            var formated_current_time = this.formatTime(this.video.currentTime);\n            $('.'+ this.conf.progress__time__current_time).text(formated_current_time);\n        }\n\n        showVideoDuration(){\n            var formated_duration = this.formatTime(this.video.duration);\n            $('.'+ this.conf.progress__time__duration).text(formated_duration);\n        }\n\n        addMarkersOnProgressBar(zip){\n            var _this = this;\n            var all_notes = zip.notes;\n            all_notes.forEach(function(note){\n\n                var seconds_elapsed = (note.event_time - zip.start_time) / 1000 ;\n\n                if (seconds_elapsed < zip.end_time){\n                    var positionToPlace = (seconds_elapsed / _this.video.duration) * 100 + '%';\n\n                    var img_src = \"public/img/\";\n\n                    if (note.type == \"bookmark\"){\n                        img_src += \"bookmark.svg\";\n                    }\n                    else if (note.type == \"image\"){\n                        img_src += \"capture.svg\";\n                    }\n                    else{\n                        img_src += \"notes.svg\";\n                    }\n\n                    // create a div\n                    var html = \"<div style='position:absolute;left:\"+ positionToPlace +\"'><img src='\" + img_src + \"'</div>\";\n\n                    var el = $('.' + _this.conf.marker_cls);\n                    el.append(html);\n                }\n            });\n        }\n\n        videoEnded(){\n           $('.' + this.conf.toggle_cls + \" img\").attr(\"src\", this.pause_icon);\n        }\n\n        registerSettingsEvents(){\n            var _this = this;\n            this.settings_icon.on(\"click\", function(evt){\n                _this.settingsToggle();\n            });\n\n            this.settings_apply_icon.on(\"click\", function(evt){\n\n            });\n        }\n\n        registerEvents(){\n            var _this = this;\n            this.video.addEventListener(\"click\", _this.togglePlay.bind(_this));\n            this.toggle_icon.addEventListener(\"click\", _this.togglePlay.bind(_this));\n            this.video.addEventListener(\"timeupdate\", _this.videoTimeUpdated.bind(_this));\n            this.video.addEventListener(\"ended\", _this.videoEnded.bind(_this));\n            this.progress_container.addEventListener(\"click\", _this.progressClickedHandler.bind(_this));\n\n            if (this.conf.settings){\n                this.registerSettingsEvents();\n            }\n        }\n\n        addChartOverPlayer(zip_data){\n            // function in dashboard script\n            createLineChart(zip_data)\n        }\n    }\n\n    window.addEventListener(\"initializePlayer\", function(evt){\n        var data = evt.detail;\n        var conf = {\n            player_cls: \"player\",\n            video_cls: \"viewer\",\n            progress_container_cls: \"progress\",\n            progress_filled_container_cls: \"progress__filled\",\n            toggle_cls: \"toggle\",\n            marker_cls: \"markers\",\n            progress__time__duration: \"progress__time__duration\",\n            progress__time__current_time: \"progress__time__current_time\",\n            settings: {\n                icon_cls: \"video-settings\",\n                container_cls: \"settings-container\",\n                offset_id: \"setting-time-offset\",\n                metric_id: \"show-metrics\",\n                apply_icon: \"video-settings-apply\"\n            }\n        };\n        \n        const player = new MediaPlayer(conf);\n        player.registerEvents();\n\n        var zip_data = data.zip;\n\n        if (!isEmpty(zip_data)){\n            var video = player.getVideo();\n            video.onloadedmetadata = function(){\n                player.showVideoDuration();\n                player.addMarkersOnProgressBar(zip_data);\n                delete player;\n            }\n        }\n        else{\n             delete player;\n        }\n    });\n  \n</script>";
},"useData":true});
templates['upload'] = template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<style>\n    .file-upload{\n        color: #1E90FF;\n        border: 2px solid #1E90FF;\n        padding: 5px;\n    }\n\n    #file-zip, #file-recording{\n        opacity: 0;\n\n        height: 0.1px;\n        z-index: -1;\n    }\n\n    .upload-container{\n        margin-top: 1%;\n        width: 90%;\n        height: 312px;\n        border-radius: 5px;\n    }\n\n    .upload-container .heading{\n        margin-top: 40px;\n        \n    }\n    .upload-files{\n        margin-top: 20px;\n    }\n\n    .custom-btn{\n        background-color:  #1E90FF;\n        color: white;\n        border: 2px solid #1E90FF;\n        border-radius: 5px;\n        padding: 5px;\n    }\n\n    .upload-el{\n         margin-top: 26px;\n    }\n\n\n</style>\n\n<div class=\"upload-container has-shadow col-md-10\">\n   <div class=\"heading\">\n       <h4>Upload meeting data to view</h4>\n   </div>\n\n    <div class=\"upload-files\">\n        <div class=\"upload-el\">\n            <input type=\"file\" id=\"file-zip\" name=\"file-zip\" multiple />\n            <label for=\"file-zip\" class=\"file-upload\">\n                <span>Select meeting data (.zip)</span>\n                <img src=\"public/img/upload_icon.svg\">\n            </label>\n        </div>\n\n        <div class=\"upload-el\">\n            <input type=\"file\" id=\"file-recording\" name=\"file-recording\" multiple />\n            <label for=\"file-recording\" class=\"file-upload\">\n                <span>Select recording (.mp4, .flac)</span>\n                <img src=\"public/img/upload_icon.svg\">\n            </label>\n        </div>\n\n        <div class=\"upload-el\">\n            <button onclick=\"uploadSubmit();\" class=\"custom-btn\">View meeting<img style=\"margin-left:8px;\" src=\"public/img/next_icon.svg\"></button>\n        </div>\n       \n    </div>\n</div>\n<script src=\"public/scripts/jszip.js\"></script>\n<script>\n\n    var ZIP_DATA = {};\n    var NOTES_DATA = {};\n    var RECORDING_DATA = {\n        url: null,\n        type: null\n    };\n\n    // add js zip code here\n    function handleZipUpload(f){\n        JSZip.loadAsync(f).then(function(zip){\n\n            zip.forEach(function(file){\n\n                var name_arr = file.split(\"/\");\n                if (name_arr.length >= 1){\n                    var fileName = name_arr[name_arr.length - 1];\n                    if (fileName == \"processed.json\"){\n\n                        zip.file(file).async(\"text\").then(function(data){\n                            var json = JSON.parse(data);\n                            ZIP_DATA = json;\n                        });\n                    }\n\n                    if (fileName == \"input.json\"){\n\n                        zip.file(file).async(\"text\").then(function(data){\n                            var json = JSON.parse(data);\n                            NOTES_DATA = json;\n                        });\n                    }\n                }\n            })\n        });\n    };\n\n    function updateRecordingURL(file){\n        RECORDING_DATA.url =  URL.createObjectURL(file);\n        RECORDING_DATA.type = file.type;\n    };\n\n    $('#file-zip').on(\"change\", function(evt){\n\n        if (evt.target.files.length){\n            var file = evt.target.files[0];\n\n            handleZipUpload(file);\n\n        };\n    });\n\n    $('#file-recording').on(\"change\", function(evt){\n\n        if (evt.target.files.length){\n            var file = evt.target.files[0];\n\n            updateRecordingURL(file);\n        };\n\n    });\n\n\n    function uploadSubmit(){\n\n        // file to dashboard handlebar\n        var event = new CustomEvent(\"dashboard\", {\n            detail: {zip: ZIP_DATA, recording: RECORDING_DATA, notes: NOTES_DATA}\n        });\n\n        window.dispatchEvent(event);\n    }\n</script>\n";
},"useData":true});
})();