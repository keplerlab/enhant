(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['dashboard'] = template({"1":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section recording\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <video width=\"100%\" height=\"100%\" id=\"recording-video\" src=\"\" controls></video>\n                </div>\n            </div>\n        </div>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section bookmark has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Bookmarks</span>\n                        </div>\n                    </div>\n\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"bookmark-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "       <div class=\"section images has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Captured Moments</span>\n                        </div>\n                    </div>\n                    <div class=\"clearfix capture-moments-data\" style=\"margin-top:5%;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section\">\n            <div class=\"clearfix\">\n                <div class=\"col-xs-6 notes has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-4\">\n                                <span class=\"cell-text inter-bold-21\">Notes</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"notes-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                <div class=\"col-xs-6 questions has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-4\">\n                                <span class=\"cell-text inter-bold-21\">Questions</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"questions-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"notes") : stack1),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":233,"column":8},"end":{"line":251,"column":15}}})) != null ? stack1 : "")
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"questions") : stack1),{"name":"if","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":252,"column":8},"end":{"line":270,"column":15}}})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section notes has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Notes</span>\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"notes-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"12":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section questions has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Questions</span>\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"questions-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section outliers has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-4\">\n                             <span class=\"cell-text inter-bold-21\">Sentiment Outliers\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"outliers-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<style>\n    .card{\n        height: 296px;\n        margin-left: 6%;\n    }\n\n    .card-cell{\n        margin-top: 32px;\n    }\n\n    .cell-text{\n        font-size: 20px;\n        word-break: break-all;\n    }\n\n    .section{\n        margin-top: 2%;\n    }\n\n    .has-padding{\n        padding: 5%;\n    }\n\n    .table-responsive{\n        overflow-y: scroll;\n        height: 200px;\n    }\n\n    .inter-regular-16{\n        font-family: \"Inter-Regular\";\n        font-size: 16px;\n    }\n\n    .inter-bold-21{\n        font-family: \"Inter-Bold\";\n        font-size: 21px;\n    }\n\n    .inter-bold-16{\n        font-family: \"Inter-Bold\";\n        font-size: 16px;\n    }\n</style>\n\n<style>\n    .GaugeMeter{\n	Position:        Relative;\n	Text-Align:      Center;\n	Overflow:        Hidden;\n	Cursor:          Default;\n}\n\n.GaugeMeter SPAN,\n    .GaugeMeter B{\n    	Margin:          0 23%;\n    	Width:           54%;\n    	Position:        Absolute;\n    	Text-align:      Center;\n    	Display:         Inline-Block;\n    	Color:           RGBa(0,0,0,.8);\n    	Font-Weight:     100;\n    	Font-Family:     \"Open Sans\", Arial;\n    	Overflow:        Hidden;\n    	White-Space:     NoWrap;\n    	Text-Overflow:   Ellipsis;\n}\n.GaugeMeter[data-style=\"Semi\"] B{\n	Margin:          0 10%;\n	Width:           80%;\n}\n\n.GaugeMeter S,\n    .GaugeMeter U{\n    	Text-Decoration: None;\n    	Font-Size:       .5em;\n    	Opacity:         .5;\n}\n\n.GaugeMeter B{\n	Color:           Black;\n	Font-Weight:     300;\n	Font-Size:       .5em;\n	Opacity:         .8;\n}\n</style>\n\n<div class=\"row section\">\n    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Call Duration</span>\n        </div>\n        <div class=\"row card-cell\">\n            <img width=\"112\" height=\"112\" src=\"public/img/clock.svg\">\n        </div>\n\n         <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\" id=\"call-duration\"></span>\n        </div>\n    </div>\n    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Average Sentiment</span>\n        </div>\n        <div class=\"row card-cell\">\n            <img width=\"112\" height=\"112\" id=\"average-sentiment\" src=\"public/img/dissatisfied_sentiment.svg\">\n        </div>\n    </div>\n    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Average Engagement</span>\n        </div>\n        <div class=\"row card-cell\">\n            <div class=\"GaugeMeter\" style=\"margin: auto\"></div>\n        </div>\n\n         <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\" id=\"average-engagement\"></span>\n        </div>\n    </div>\n\n\n</div>\n\n<div class=\"clearfix section has-shadow\">\n    <div class=\"col-xs-12 meeting-data-container has-padding\">\n        <div class=\"meeting-info\">\n            <div class=\"row\">\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-21\">Meeting</span>\n                </div>\n            </div>\n\n            <div class=\"row\" style=\"margin-top: 2%;\">\n                <div class=\"col-xs-3\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-id\">ID: </span>\n                </div>\n                <div class=\"col-xs-3\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-date\">Date: </span>\n                </div>\n                <div class=\"col-xs-3\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-time\">Start Time: </span>\n                </div>\n                <div class=\"col-xs-3\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-duration\">Duration: </span>\n                </div>\n            </div>\n        </div>\n\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"recording") : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":149,"column":8},"end":{"line":157,"column":15}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"bookmark") : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":159,"column":8},"end":{"line":178,"column":15}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"images") : stack1),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":180,"column":8},"end":{"line":194,"column":15}}})) != null ? stack1 : "")
    + "    \n    \n"
    + ((stack1 = (lookupProperty(helpers,"CheckIfbothTrue")||(depth0 && lookupProperty(depth0,"CheckIfbothTrue"))||container.hooks.helperMissing).call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"notes") : stack1),((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"questions") : stack1),{"name":"CheckIfbothTrue","hash":{},"fn":container.program(7, data, 0),"inverse":container.program(9, data, 0),"data":data,"loc":{"start":{"line":197,"column":8},"end":{"line":271,"column":28}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"sentiment_outliers") : stack1),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":273,"column":8},"end":{"line":291,"column":15}}})) != null ? stack1 : "")
    + "    </div>\n</div>\n\n<script src=\"public/scripts/GaugeMeter.js\"></script>\n<script>\n\n    function generateMeetingDate(start_time){\n        var date = new Date(start_time);\n        var formatted_months = (\"0\" + (date.getMonth()+1)).slice(-2).toString();\n        var formatted_yy = (\"0\" + date.getFullYear()).slice(-4).toString();\n        var formatted_dd = (\"0\" + date.getDate()).slice(-2).toString();\n\n        var formatted_hh = (\"0\" + date.getHours()).slice(-2).toString();\n        var formatted_mm = (\"0\" + date.getMinutes()).slice(-2).toString();\n\n        return {\n            \"date\" : formatted_yy + \"/\" + formatted_months + \"/\" + formatted_dd,\n            \"time\": formatted_hh + \":\" + formatted_mm\n        }\n    }\n\n    function getMeetingDuration(start_time, end_time){\n        var diff = end_time - start_time;\n        var ms = diff % 1000;\n        diff = (diff - ms) / 1000;\n        var ss = diff % 60;\n        diff = (diff - ss) / 60;\n        var mm = diff % 60;\n        diff = (diff - mm) / 60;\n        var hh = diff % 24;\n        days = (diff - hh) / 24;\n\n        var formatted_hh = (\"0\" + hh).slice(-2).toString();\n        var formatted_mm = (\"0\" + mm).slice(-2).toString();\n        var formatted_ss = (\"0\" + ss).slice(-2).toString();\n        var formatted_ms = (\"0\" + ms + \"0\").slice(-3).toString();\n\n        return formatted_hh + \":\" + formatted_mm + \":\" + formatted_ss;\n    }\n\n    function updateMeetingData(zip){\n        var meeting_id = zip.meeting_id;\n        var start_time_data = generateMeetingDate(zip.start_time);\n        var meeting_date = start_time_data.date;\n        var meeting_start_time = start_time_data.time;\n        var meeting_duration = getMeetingDuration(zip.start_time, zip.end_time);\n\n        $('#meeting-id').text(\"ID: \" + meeting_id);\n        $('#meeting-date').text(\"Date: \" + meeting_date);\n        $('#meeting-time').text(\"Start Time: \" + meeting_start_time);\n        $('#meeting-duration').text(\"Duration: \" + meeting_duration);\n    }\n\n    function updateBookmarks(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"bookmark\"});\n\n        var bookmark_html = \"\";\n        data.forEach(function(obj){\n\n            var bookmark_arr = obj.content;\n            var row_html = \"\";\n\n            var host_transcription = bookmark_arr.filter(function(d){return d[\"origin\"] == \"host\"});\n            var guest_transcription = bookmark_arr.filter(function(d){return d[\"origin\"] == \"guest\"});\n\n            if (!host_transcription.length && !guest_transcription.length){\n\n                var row_data = bookmark_arr[0];\n\n                row_html = \"<tr>\" +\n                    \"<td>\" + row_data.content + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, obj.event_time)+ \"</td></tr>\"; \n                \n                bookmark_html += row_html;\n            \n            }\n            else{\n\n                var host_final = \"Host: \"; \n                var guest_final = \"Guest: \";\n\n                host_transcription.forEach(function(hd){\n                    host_final += hd.content;\n                });\n\n                guest_transcription.forEach(function(gd){\n                   guest_final += gd.content;\n                });\n\n                var final_bookmark_text = \"\";\n\n                if (host_transcription.length){\n                    final_bookmark_text += host_final;\n                    final_bookmark_text += \"<br>\";\n                }\n                if (guest_transcription.length){\n                    final_bookmark_text += guest_final;\n                }\n\n                row_html += \"<tr>\" +\n                    \"<td>\" + final_bookmark_text + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, obj.event_time)+ \"</td></tr>\";\n\n                bookmark_html += row_html;\n\n            }\n        });\n\n        $('.bookmark-data-tbody').html(bookmark_html);\n\n    }\n\n    function updateNotes(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"notes\"});\n\n        data.forEach(function(d){\n            var row_html = \"<tr>\" +\n                    \"<td>\" + d.content + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, d.event_time)+ \"</td></tr>\";\n            \n            $('.notes-data-tbody').html(row_html);\n        });\n    }\n\n    function updateCapturedImages(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"image\"});\n\n        data.forEach(function(d){\n            var html = \"<div class='col-md-3 has-shadow' style='margin-left:5%'>\" +\n                \"<div><img style='max-width:100%;max-height:100%' src='\" + d.content + \"'>\" +\n                \"</div>\" +\n                \"<div class='text-center has-padding inter-regular-16' style='margin-top:5%'>\" + getMeetingDuration(zip.start_time, d.event_time) +\n                \"</div>\"; \n\n            $('.capture-moments-data').append(html);\n        });\n    }\n\n    function updateQuestions(zip){\n        var data = zip.questionsAsked.questionsAsked;\n\n        data.forEach(function(d){\n            var row_html = \"<tr>\" +\n                    \"<td>\" + d + \"</td>\" + \n                    \"</tr>\";\n            \n            $('.questions-data-tbody').append(row_html);\n                \n        });\n    }\n\n    function updateSentimentOutliers(zip){\n        var highSentimentOutliers = zip.highSentimentSentences.highSentimentSentencesGuest;\n        var lowSentimentOutliers = zip.lowSentimentSentences.lowSentimentSentencesGuest;\n\n        var final_arr = [];\n        final_arr.push(...highSentimentOutliers);\n        final_arr.push(...lowSentimentOutliers);\n\n        // sort the final array\n        final_arr.sort(function(a, b){\n            var et_a = zip.start_time + a[0];\n            var et_b = zip.start_time + b[0];\n\n            return et_a > et_b;\n        })\n\n        var sentiment_outlier_html = \"\";\n\n        final_arr.forEach(function(d){\n\n            // add number of milliseconds to the start time\n            var end_time = zip.start_time + d[0];\n            var elapsed_time = getMeetingDuration(zip.start_time, end_time);\n\n            var row_html = \"<tr>\" +\n                    \"<td>\" + d[1] + \"</td>\" +\n                    \"<td>\" + elapsed_time + \"</td></tr>\";\n            \n            $('.outliers-data-tbody').append(row_html);\n\n        });\n    }\n\n    function updateCallDuration(zip){\n        var duration = getMeetingDuration(zip.start_time,zip.end_time);\n        var duration_arr = duration.split(\":\");\n\n        var hh = duration_arr[0];\n        var mm = duration_arr[1];\n        var ss = duration_arr[2];\n\n        // check if hours is 0\n        if (hh == \"00\"){\n\n            // check if min is 0\n            if (mm == \"00\"){\n                var text = ss + \" \" + \"sec\";\n                $('#call-duration').text(text);\n            }\n            else{\n                var text = mm + \" \" +\"min\" + \" \" + ss + \" \" +\"sec\";\n                $('#call-duration').text(text);\n            }\n        }\n        else{\n\n            if (mm == \"00\"){\n                var text = hh + \" \" +\"hrs\";\n                $('#call-duration').text(text);\n            }\n            else{\n                var text = hh + \" \" +\"hrs\" + \" \" + mm + \" \" +\"min\";\n                $('#call-duration').text(text);\n            }\n        }\n    }\n\n    function updateAverageEngagementScore(zip){\n\n        var averageScore = zip.engagement_scores.avg_engagement_score;\n\n        $(\".GaugeMeter\").gaugeMeter({\n           \"percent\": averageScore,\n            \"text\": null,\n            \"text_size\": 0.0,\n            \"prepend\": null,\n            \"append\": \"%\",\n            \"size\": \"112\",\n            \"width\": \"12\",\n            \"style\": \"Full\",\n            \"color\": \"#1E90FF\",\n            \"back\": \"#E6E6E6\",\n            \"theme\": null,\n            \"animate_gauge_colors\": false,\n            \"animate_text_colors\":  false,\n            \"label\": null,\n            \"label_color\": null,\n            \"stripe\": null\n        });\n\n        // this is to remove the text within gauge meter\n        $(\".GaugeMeter span\").remove();\n\n        $('#average-engagement').text(averageScore + \" %\");\n\n    }\n\n    function updateAverageSentiment(zip){\n        var sentiment = Number(zip.avgSentimentScoreGuest);\n        if (sentiment <= 0.2){\n            $('#average-sentiment').attr(\"src\", \"public/img/dissatisfied_sentiment.svg\");\n        }\n        else if (sentiment > 0.2 && sentiment < 0.7){\n            $('#average-sentiment').attr(\"src\", \"public/img/neutral_sentiment.svg\");\n        }\n        else{\n            $('#average-sentiment').attr(\"src\", \"public/img/satisfied_sentiment.svg\");\n        }\n    }\n\n    function startVideoPlayback(recording){\n        var url = recording.url;\n        $('#recording-video').attr(\"src\", url);\n    }\n\n    function reset(){\n        $('.outliers-data-tbody').html(\"\");\n        $('.questions-data-tbody').html(\"\");\n        $('.notes-data-tbody').html(\"\");\n        $('.bookmark-data-tbody').html(\"\");\n        $('.capture-moments-data').html(\"\");\n    }\n\n    window.addEventListener(\"dashboard-data\", function(evt){\n        var data = evt.detail;\n\n        console.log(\" dashboard data : \", data);\n\n        var zip_data = data.zip;\n        var recording_data = data.recording;\n\n        reset();\n\n        if (zip_data){\n            updateMeetingData(zip_data);\n            updateBookmarks(zip_data);\n            updateCapturedImages(zip_data);\n            updateNotes(zip_data);\n            updateQuestions(zip_data);\n            updateSentimentOutliers(zip_data);\n\n            updateCallDuration(zip_data);\n            updateAverageEngagementScore(zip_data);\n            updateAverageSentiment(zip_data);\n        }\n\n        if (recording_data){\n            startVideoPlayback(recording_data);\n        }\n\n    });\n</script>";
},"useData":true});
templates['upload'] = template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<style>\n    .file-upload{\n        color: #1E90FF;\n        border: 2px solid #1E90FF;\n        padding: 5px;\n    }\n\n    #file-zip, #file-recording{\n        opacity: 0;\n\n        height: 0.1px;\n        z-index: -1;\n    }\n\n    .upload-container{\n        margin-top: 1%;\n        width: 90%;\n        height: 312px;\n        border-radius: 5px;\n    }\n\n    .upload-container .heading{\n        margin-top: 40px;\n        \n    }\n    .upload-files{\n        margin-top: 20px;\n    }\n\n    .custom-btn{\n        background-color:  #1E90FF;\n        color: white;\n        border: 2px solid #1E90FF;\n        border-radius: 5px;\n        padding: 5px;\n    }\n\n    .upload-el{\n         margin-top: 26px;\n    }\n\n\n</style>\n\n<div class=\"upload-container has-shadow col-md-10\">\n   <div class=\"heading\">\n       <h4>Upload meeting data to view</h4>\n   </div>\n\n    <div class=\"upload-files\">\n        <div class=\"upload-el\">\n            <input type=\"file\" id=\"file-zip\" name=\"file-zip\" multiple />\n            <label for=\"file-zip\" class=\"file-upload\">\n                <span>Select meeting data (.zip)</span>\n                <img src=\"public/img/upload_icon.svg\">\n            </label>\n        </div>\n\n        <div class=\"upload-el\">\n            <input type=\"file\" id=\"file-recording\" name=\"file-recording\" multiple />\n            <label for=\"file-recording\" class=\"file-upload\">\n                <span>Select recording (.mp4, .flac)</span>\n                <img src=\"public/img/upload_icon.svg\">\n            </label>\n        </div>\n\n        <div class=\"upload-el\">\n            <button onclick=\"uploadSubmit();\" class=\"custom-btn\">View meeting<img style=\"margin-left:8px;\" src=\"public/img/next_icon.svg\"></button>\n        </div>\n       \n    </div>\n</div>\n<script src=\"public/scripts/jszip.js\"></script>\n<script>\n\n    var ZIP_DATA = {};\n    var RECORDING_DATA = {\n        url: null,\n        type: null\n    };\n\n    // add js zip code here\n    function handleZipUpload(f){\n        JSZip.loadAsync(f).then(function(zip){\n\n            zip.forEach(function(file){\n\n                var name_arr = file.split(\"/\");\n                if (name_arr.length >= 1){\n                    var fileName = name_arr[name_arr.length - 1];\n                    if (fileName == \"processed.json\"){\n\n                        zip.file(file).async(\"text\").then(function(data){\n                            var json = JSON.parse(data);\n                            ZIP_DATA = json;\n                        });\n                    }\n                }\n            })\n        });\n    };\n\n    function updateRecordingURL(file){\n        RECORDING_DATA.url =  URL.createObjectURL(file);\n        RECORDING_DATA.type = file.type;\n    };\n\n    $('#file-zip').on(\"change\", function(evt){\n\n        if (evt.target.files.length){\n            var file = evt.target.files[0];\n\n            handleZipUpload(file);\n\n        };\n    });\n\n    $('#file-recording').on(\"change\", function(evt){\n\n        if (evt.target.files.length){\n            var file = evt.target.files[0];\n\n            updateRecordingURL(file);\n        };\n\n    });\n\n\n    function uploadSubmit(){\n\n        // file to dashboard handlebar\n        var event = new CustomEvent(\"dashboard\", {\n            detail: {zip: ZIP_DATA, recording: RECORDING_DATA}\n        });\n\n        window.dispatchEvent(event);\n    }\n</script>\n";
},"useData":true});
})();