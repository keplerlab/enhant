(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['chart'] = template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\n<canvas id=\"chart\" style=\"width:100%\"></canvas>\n\n<script>\n\n    // This is to modify the spacing betwen legend and chart\n    Chart.Legend.prototype.afterFit = function() {\n        this.height = this.height + 20;\n    };\n\n    function createLineChart(zip, config, canvas_style){\n        var data = [];\n        var meeting_start_time = zip.start_time;\n        var meeting_end_time = zip.end_time;\n        var samplingRate_in_ms = 10 * 1000; // 10 seconds\n\n        var  datasets = [];\n        var sentimentData = [];\n\n        var ctx = document.getElementById(\"chart\").getContext('2d');\n\n        if (canvas_style){\n             $('#chart').css(canvas_style);\n        }\n       \n\n        if (zip.hasOwnProperty(\"engagement_scores\")){\n\n            var d = zip.engagement_scores.engagement_scores;\n            var ed = d.map(function(r) { return { \"x\" : new Date(meeting_start_time + r[0]), \"y\" : r[1]} });\n\n            var engagementData = {\n                label: \"Engagement Score\",\n                data: ed,\n                borderColor: '#1E90FF',\n                fill: false\n            }\n\n            datasets.push(engagementData);\n        }\n\n        if (zip.hasOwnProperty(\"highSentimentSentences\") || zip.hasOwnProperty(\"highSentimentSentences\")){\n            \n            sentimentData.push(...zip.highSentimentSentences.highSentimentSentencesGuest);\n            sentimentData.push(...zip.lowSentimentSentences.lowSentimentSentencesGuest);\n\n            // sort the final array\n            sentimentData.sort(function(a, b){\n                var et_a = meeting_start_time + a[0];\n                var et_b = meeting_start_time + b[0];\n\n                return et_a - et_b;\n            });\n\n            var ed = sentimentData.map(function(r) { return { \"x\" : new Date(meeting_start_time + r[0]), \"y\" : r[2] !== null ? Math.round(r[2]*100): r[2]} });\n\n            var sentimentData = {\n                label: \"Sentiment Score\",\n                data: ed,\n                borderColor: '#8FC8FF',\n                fill: false\n            }\n\n            datasets.push(sentimentData);\n\n        }\n\n        if (datasets.length){\n\n            var lineChart = new Chart(ctx, {\n                type: 'line',\n                data: { datasets: datasets },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: config,\n                    spanGaps: false\n                }\n            });\n        }\n    }\n\n    window.addEventListener(\"createChart\", function(evt){\n        var data = evt.detail;\n        var zip = data.zip;\n        var config = data.config;\n        var canvas_style = data.style || null;\n        createLineChart(zip, config, canvas_style);\n\n        window.removeEventListener(\"createChart\", function(evt){\n            console.log(\"createChart event removed\");\n        });\n    });\n</script>";
},"useData":true});
templates['dashboard'] = template({"1":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Average Sentiment</span>\n        </div>\n        <div class=\"row card-cell\">\n            <img width=\"112\" height=\"112\" id=\"average-sentiment\" src=\"public/img/dissatisfied_sentiment.svg\">\n        </div>\n    </div>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Average Engagement</span>\n        </div>\n        <div class=\"row card-cell\">\n            <div class=\"GaugeMeter\" style=\"margin: auto\"></div>\n        </div>\n\n         <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\" id=\"average-engagement\"></span>\n        </div>\n    </div>\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section recording\">\n        </div>\n";
},"7":function(container,depth0,helpers,partials,data) {
    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return ((stack1 = lookupProperty(helpers,"if").call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"chart") : stack1),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":244,"column":8},"end":{"line":250,"column":8}}})) != null ? stack1 : "");
},"8":function(container,depth0,helpers,partials,data) {
    return "         <div class=\"section sentiment-engagement-chart has-shadow has-padding\">\n            <div class=\"clearfix\" style=\"margin-bottom: 20px;\">\n                <span class=\"inter-bold-21\">Engagement and Sentiment Scores</span>\n            </div>\n        </div>\n        ";
},"10":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section bookmark has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-8\">\n                             <span class=\"cell-text inter-bold-21\">Bookmarks</span><br>\n                             <span class=\"negative-time-msg inter-bold-14\">Bookmarks taken before recording are represented with negative time</span>\n                        </div>\n                    </div>\n\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"bookmark-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"12":function(container,depth0,helpers,partials,data) {
    return "        <div id=\"myModal\" class=\"modal\">\n            <span class=\"close\">&times;</span>\n            <img class=\"modal-content\" id=\"img01\">\n        </div>\n        \n       <div class=\"section images has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-8\">\n                             <span class=\"cell-text inter-bold-21\">Captured Moments</span><br>\n                             <span class=\"negative-time-msg inter-bold-14\">Screenshots taken before recording are represented with negative time</span>\n                        </div>\n                    </div>\n                    <div class=\"clearfix capture-moments-data\" style=\"margin-top:5%;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section\">\n            <div class=\"clearfix\">\n                <div class=\"col-xs-6 notes has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-8\">\n                                <span class=\"cell-text inter-bold-21\">Notes</span><br>\n                                <span class=\"negative-time-msg inter-bold-14\">Notes taken before recording are represented with negative time</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"notes-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                <div class=\"col-xs-6 questions has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-8\">\n                                <span class=\"cell-text inter-bold-21\">Questions</span><br>\n                                <span class=\"negative-time-msg inter-bold-14\">Questions identified befored recording are represented with negative time</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"questions-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"16":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"notes") : stack1),{"name":"if","hash":{},"fn":container.program(17, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":335,"column":8},"end":{"line":354,"column":15}}})) != null ? stack1 : "")
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"questions") : stack1),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":355,"column":8},"end":{"line":374,"column":15}}})) != null ? stack1 : "");
},"17":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section notes has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-8\">\n                             <span class=\"cell-text inter-bold-21\">Notes</span><br>\n                             <span class=\"negative-time-msg inter-bold-14\">Notes taken before recording are represented with negative time</span>\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"notes-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"19":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section questions has-shadow\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 has-padding\">\n                    <div class=\"row heading\">\n                        <div class=\"col-xs-8\">\n                             <span class=\"cell-text inter-bold-21\">Questions</span><br>\n                             <span class=\"negative-time-msg inter-bold-14\">Questions identified before recording are represented with negative time</span>\n                        </div>\n                    </div>\n                    <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"questions-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"21":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"section\">\n            <div class=\"clearfix\">\n                <div class=\"col-xs-6 outliers has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-12\">\n                                <span class=\"cell-text inter-bold-21\">Sentiment Outliers (Negative)</span><br>\n                                <span class=\"negative-time-msg inter-bold-14\">Outliers identified before recording are represented with negative time</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"negative-outliers-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                <div class=\"col-xs-6 outliers has-shadow\">\n                    <div class=\"data-container has-padding\">\n                        <div class=\"row heading\">\n                            <div class=\"col-xs-12\">\n                                <span class=\"cell-text inter-bold-21\">Sentiment Outliers (Positive)</span><br>\n                                <span class=\"negative-time-msg inter-bold-14\">Outliers identified before recording are represented with negative time</span>\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\" style=\"margin-top:5%;\">\n                        <table class=\"table table-striped\">\n                        <tbody class=\"positive-outliers-data-tbody inter-regular-16\">\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n";
},"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<style>\n    .card{\n        height: 296px;\n        margin-left: 6%;\n    }\n\n    .card-cell{\n        margin-top: 32px;\n    }\n\n    .cell-text{\n        font-size: 20px;\n        word-break: break-all;\n    }\n\n    .section{\n        margin-top: 2%;\n    }\n\n    .has-padding{\n        padding: 5%;\n    }\n\n    .outliers{\n        height:350px;\n    }\n\n    .table-responsive{\n        overflow-y: scroll;\n        height: 200px;\n    }\n\n    .inter-regular-16{\n        font-family: \"Inter-Regular\";\n        font-size: 16px;\n    }\n\n    .inter-bold-14{\n        font-family: \"Inter-Bold\";\n        font-size: 14px;\n    }\n\n    .inter-bold-21{\n        font-family: \"Inter-Bold\";\n        font-size: 21px;\n    }\n\n    .inter-bold-16{\n        font-family: \"Inter-Bold\";\n        font-size: 16px;\n    }\n    .sentiment-engagement-chart{\n        height: 400px;\n    }\n\n    .captured-image {\n        border-radius: 5px;\n        cursor: pointer;\n        transition: 0.3s;\n    }\n    .captured-image:hover {opacity: 0.7;}\n\n    /* The Modal (background) */\n    .modal {\n        display: none; /* Hidden by default */\n        position: fixed; /* Stay in place */\n        z-index: 1; /* Sit on top */\n        padding-top: 100px; /* Location of the box */\n        left: 0;\n        top: 0;\n        width: 100%; /* Full width */\n        height: 100%; /* Full height */\n        overflow: auto; /* Enable scroll if needed */\n        background-color: rgb(0,0,0); /* Fallback color */\n        background-color: rgba(0,0,0,0.9); /* Black w/ opacity */\n    }\n\n    /* Modal Content (image) */\n    .modal-content {\n        margin: auto;\n        display: block;\n        width: 80%;\n        max-width: 1000px;\n\n         /* Add Animation */\n        -webkit-animation-name: zoom;\n        -webkit-animation-duration: 0.6s;\n        animation-name: zoom;\n        animation-duration: 0.6s;\n    }\n\n    @-webkit-keyframes zoom {\n        from {-webkit-transform:scale(0)} \n        to {-webkit-transform:scale(1)}\n    }\n\n    @keyframes zoom {\n        from {transform:scale(0)} \n        to {transform:scale(1)}\n    }\n\n    /* The Close Button */\n    .close {\n        position: absolute;\n        top: 15px;\n        right: 35px;\n        color: #f1f1f1;\n        font-size: 40px;\n        font-weight: bold;\n        transition: 0.3s;\n    }\n\n    .close:hover,\n    .close:focus {\n        color: #bbb;\n        text-decoration: none;\n        cursor: pointer;\n    }\n\n    /* 100% Image Width on Smaller Screens */\n    @media only screen and (max-width: 700px){\n        .modal-content {\n            width: 100%;\n        }\n    }\n\n    .negative-time-msg{\n        display: none;\n        color: #1E90FF;\n    }\n\n</style>\n\n<style>\n    .GaugeMeter{\n	Position:        Relative;\n	Text-Align:      Center;\n	Overflow:        Hidden;\n	Cursor:          Default;\n}\n\n.GaugeMeter SPAN,\n    .GaugeMeter B{\n    	Margin:          0 23%;\n    	Width:           54%;\n    	Position:        Absolute;\n    	Text-align:      Center;\n    	Display:         Inline-Block;\n    	Color:           RGBa(0,0,0,.8);\n    	Font-Weight:     100;\n    	Font-Family:     \"Open Sans\", Arial;\n    	Overflow:        Hidden;\n    	White-Space:     NoWrap;\n    	Text-Overflow:   Ellipsis;\n}\n.GaugeMeter[data-style=\"Semi\"] B{\n	Margin:          0 10%;\n	Width:           80%;\n}\n\n.GaugeMeter S,\n    .GaugeMeter U{\n    	Text-Decoration: None;\n    	Font-Size:       .5em;\n    	Opacity:         .5;\n}\n\n.GaugeMeter B{\n	Color:           Black;\n	Font-Weight:     300;\n	Font-Size:       .5em;\n	Opacity:         .8;\n}\n</style>\n\n<div class=\"row section\">\n    <div class=\"col-xs-3 has-shadow card text-center\">\n        <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\">Call Duration</span>\n        </div>\n        <div class=\"row card-cell\">\n            <img width=\"112\" height=\"112\" src=\"public/img/clock.svg\">\n        </div>\n\n         <div class=\"row card-cell\">\n            <span class=\"cell-text inter-bold-21\" id=\"call-duration\"></span>\n        </div>\n    </div>\n\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"avg_sentiment") : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":190,"column":5},"end":{"line":199,"column":11}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"avg_engagement") : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":201,"column":4},"end":{"line":214,"column":11}}})) != null ? stack1 : "")
    + "\n\n</div>\n\n<div class=\"clearfix section has-shadow\">\n    <div class=\"col-xs-12 meeting-data-container has-padding\">\n        <div class=\"meeting-info\">\n            <div class=\"row\">\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-21\">Meeting</span>\n                </div>\n            </div>\n\n            <div class=\"row\" style=\"margin-top: 2%;\">\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-date\">Date: </span>\n                </div>\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-time\">Start Time: </span>\n                </div>\n                <div class=\"col-xs-4\">\n                    <span class=\"cell-text inter-bold-16\" id=\"meeting-duration\">Duration: </span>\n                </div>\n            </div>\n        </div>\n\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"recording") : stack1),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.program(7, data, 0),"data":data,"loc":{"start":{"line":241,"column":8},"end":{"line":250,"column":15}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"bookmark") : stack1),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":252,"column":8},"end":{"line":272,"column":15}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"images") : stack1),{"name":"if","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":274,"column":8},"end":{"line":294,"column":15}}})) != null ? stack1 : "")
    + "    \n    \n"
    + ((stack1 = (lookupProperty(helpers,"CheckIfbothTrue")||(depth0 && lookupProperty(depth0,"CheckIfbothTrue"))||container.hooks.helperMissing).call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"notes") : stack1),((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"questions") : stack1),{"name":"CheckIfbothTrue","hash":{},"fn":container.program(14, data, 0),"inverse":container.program(16, data, 0),"data":data,"loc":{"start":{"line":297,"column":8},"end":{"line":375,"column":28}}})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = (depth0 != null ? lookupProperty(depth0,"context") : depth0)) != null ? lookupProperty(stack1,"sentiment_outliers") : stack1),{"name":"if","hash":{},"fn":container.program(21, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":377,"column":8},"end":{"line":414,"column":15}}})) != null ? stack1 : "")
    + "    </div>\n</div>\n\n<script src=\"public/scripts/GaugeMeter.js\"></script>\n<script src=\"public/scripts/moment.js\"></script>\n<script src=\"public/scripts/Chart.js\"></script>\n<script>\n\n    function generateMeetingDate(start_time){\n        var date = new Date(start_time);\n        var formatted_months = (\"0\" + (date.getMonth()+1)).slice(-2).toString();\n        var formatted_yy = (\"0\" + date.getFullYear()).slice(-4).toString();\n        var formatted_dd = (\"0\" + date.getDate()).slice(-2).toString();\n\n        var formatted_hh = (\"0\" + date.getHours()).slice(-2).toString();\n        var formatted_mm = (\"0\" + date.getMinutes()).slice(-2).toString();\n\n        return {\n            \"date\" : formatted_yy + \"/\" + formatted_months + \"/\" + formatted_dd,\n            \"time\": formatted_hh + \":\" + formatted_mm\n        }\n    }\n\n    function getMeetingDuration(start_time, end_time){\n        var diff = end_time - start_time;\n        var is_negative = diff < 0 ? true : false;\n\n        diff = Math.abs(diff);\n\n        var ms = diff % 1000;\n        diff = (diff - ms) / 1000;\n        var ss = diff % 60;\n        diff = (diff - ss) / 60;\n        var mm = diff % 60;\n        diff = (diff - mm) / 60;\n        var hh = diff % 24;\n        days = (diff - hh) / 24;\n\n        var formatted_hh = (\"0\" + hh).slice(-2).toString();\n        var formatted_mm = (\"0\" + mm).slice(-2).toString();\n        var formatted_ss = (\"0\" + ss).slice(-2).toString();\n        var formatted_ms = (\"0\" + ms + \"0\").slice(-3).toString();\n\n        if (is_negative){\n            return \"-\" + formatted_hh + \":\" + formatted_mm + \":\" + formatted_ss;\n        }\n        else{\n            return formatted_hh + \":\" + formatted_mm + \":\" + formatted_ss;\n        }\n    }\n\n    function updateMeetingData(zip){\n        var start_time_data = generateMeetingDate(zip.start_time);\n        var meeting_date = start_time_data.date;\n        var meeting_start_time = start_time_data.time;\n        var meeting_duration = getMeetingDuration(zip.start_time, zip.end_time);\n\n        $('#meeting-date').text(\"Date: \" + meeting_date);\n        $('#meeting-time').text(\"Start Time: \" + meeting_start_time);\n        $('#meeting-duration').text(\"Duration: \" + meeting_duration);\n    }\n\n    function updateBookmarks(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"bookmark\"});\n\n        var bookmark_html = \"\";\n        data.forEach(function(obj){\n\n            var bookmark_arr = obj.content;\n            var row_html = \"\";\n\n            var host_transcription = bookmark_arr.filter(function(d){return d[\"origin\"] == \"host\"});\n            var guest_transcription = bookmark_arr.filter(function(d){return d[\"origin\"] == \"guest\"});\n\n            if (!host_transcription.length && !guest_transcription.length){\n\n                var row_data = bookmark_arr[0];\n\n                row_html = \"<tr>\" +\n                    \"<td>\" + row_data.content + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, obj.event_time)+ \"</td></tr>\"; \n                \n                bookmark_html += row_html;\n            \n            }\n            else{\n\n                var host_final = \"Host: \"; \n                var guest_final = \"Guest: \";\n\n                host_transcription.forEach(function(hd){\n                    host_final += hd.content;\n                });\n\n                guest_transcription.forEach(function(gd){\n                   guest_final += gd.content;\n                });\n\n                var final_bookmark_text = \"\";\n\n                if (host_transcription.length){\n                    final_bookmark_text += host_final;\n                    final_bookmark_text += \"<br>\";\n                }\n                if (guest_transcription.length){\n                    final_bookmark_text += guest_final;\n                }\n\n                row_html += \"<tr>\" +\n                    \"<td>\" + final_bookmark_text + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, obj.event_time)+ \"</td></tr>\";\n\n                bookmark_html += row_html;\n\n            }\n        });\n\n        $('.bookmark-data-tbody').html(bookmark_html);\n\n    }\n\n    function updateNotes(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"notes\"});\n\n        data.forEach(function(d){\n            var row_html = \"<tr>\" +\n                    \"<td>\" + d.content + \"</td>\" +\n                    \"<td>\" + getMeetingDuration(zip.start_time, d.event_time)+ \"</td></tr>\";\n            \n            $('.notes-data-tbody').append(row_html);\n        });\n    }\n\n    function updateCapturedImages(zip){\n        var data = zip.notes.filter(function(obj){return obj[\"type\"] == \"image\"});\n\n        data.forEach(function(d){\n            var html = \"<div class='col-md-3 has-shadow' style='margin-left:5%'>\" +\n                \"<div><img class='captured-image' style='max-width:100%;max-height:100%' src='\" + d.content + \"'>\" +\n                \"</div>\" +\n                \"<div class='text-center has-padding inter-regular-16' style='margin-top:5%'>\" + getMeetingDuration(zip.start_time, d.event_time) +\n                \"</div>\"; \n\n            $('.capture-moments-data').append(html);\n        });\n\n        if (data.length){\n             var modal = document.getElementById(\"myModal\");\n            var img = $(\".captured-image\");\n            var modalImg = document.getElementById(\"img01\");\n            img.click(function(){\n                modal.style.display = \"block\";\n                modalImg.src = this.src;\n            });\n\n            // Get the <span> element that closes the modal\n            var span = document.querySelector(\".close\");\n\n            // When the user clicks on <span> (x), close the modal\n            span.onclick = function() { \n                modal.style.display = \"none\";\n            }\n        }\n    }\n\n    function updateQuestions(zip){\n\n        if (zip.hasOwnProperty(\"questionsAsked\")){\n            var data = zip.questionsAsked;\n\n            data.forEach(function(d){\n\n                // add number of milliseconds to the start time\n                var end_time = zip.start_time + d.time;\n                var elapsed_time = getMeetingDuration(zip.start_time, end_time);\n\n                var row_html = \"<tr>\" +\n                        \"<td>\" + d.question + \"</td>\" +\n                        \"<td>\" + elapsed_time + \"</td></tr>\";\n                \n                $('.questions-data-tbody').append(row_html);\n                    \n            });\n        }\n    }\n\n    function updateSentimentOutliers(zip){\n\n        if (zip.hasOwnProperty(\"highSentimentSentences\")){\n            var highSentimentOutliers = zip.highSentimentSentences.highSentimentSentencesGuest;\n            var lowSentimentOutliers = zip.lowSentimentSentences.lowSentimentSentencesGuest;\n\n            lowSentimentOutliers.forEach(function(d){\n\n                // add number of milliseconds to the start time\n                var end_time = zip.start_time + d[0];\n                var elapsed_time = getMeetingDuration(zip.start_time, end_time);\n\n                var row_html = \"<tr>\" +\n                        \"<td>\" + d[1] + \"</td>\" +\n                        \"<td>\" + elapsed_time + \"</td></tr>\";\n                \n                $('.negative-outliers-data-tbody').append(row_html);\n\n            });\n\n            highSentimentOutliers.forEach(function(d){\n\n                // add number of milliseconds to the start time\n                var end_time = zip.start_time + d[0];\n                var elapsed_time = getMeetingDuration(zip.start_time, end_time);\n\n                var row_html = \"<tr>\" +\n                        \"<td>\" + d[1] + \"</td>\" +\n                        \"<td>\" + elapsed_time + \"</td></tr>\";\n                \n                $('.positive-outliers-data-tbody').append(row_html);\n\n            });\n        }\n        \n    }\n\n    function updateCallDuration(zip){\n        var duration = getMeetingDuration(zip.start_time,zip.end_time);\n        var duration_arr = duration.split(\":\");\n\n        var hh = duration_arr[0];\n        var mm = duration_arr[1];\n        var ss = duration_arr[2];\n\n        // check if hours is 0\n        if (hh == \"00\"){\n\n            // check if min is 0\n            if (mm == \"00\"){\n                var text = ss + \" \" + \"sec\";\n                $('#call-duration').text(text);\n            }\n            else{\n                var text = mm + \" \" +\"min\" + \" \" + ss + \" \" +\"sec\";\n                $('#call-duration').text(text);\n            }\n        }\n        else{\n\n            if (mm == \"00\"){\n                var text = hh + \" \" +\"hrs\";\n                $('#call-duration').text(text);\n            }\n            else{\n                var text = hh + \" \" +\"hrs\" + \" \" + mm + \" \" +\"min\";\n                $('#call-duration').text(text);\n            }\n        }\n    }\n\n    function updateAverageEngagementScore(zip){\n\n        if (zip.hasOwnProperty(\"engagement_scores\")){\n\n            \n\n            var averageScore = parseFloat(zip.engagement_scores.avg_engagement_score.toFixed(1));\n            console.log(\" average score \", zip.engagement_scores.avg_engagement_score, averageScore);\n\n            $(\".GaugeMeter\").gaugeMeter({\n                \"percent\": averageScore,\n                \"text\": null,\n                \"text_size\": 0.0,\n                \"prepend\": null,\n                \"append\": \"%\",\n                \"size\": \"112\",\n                \"width\": \"12\",\n                \"style\": \"Full\",\n                \"color\": \"#1E90FF\",\n                \"back\": \"#E6E6E6\",\n                \"theme\": null,\n                \"animate_gauge_colors\": false,\n                \"animate_text_colors\":  false,\n                \"label\": null,\n                \"label_color\": null,\n                \"stripe\": null\n            });\n\n            // this is to remove the text within gauge meter\n            $(\".GaugeMeter span\").remove();\n\n            $('#average-engagement').text(averageScore + \" %\");\n        }\n\n    }\n\n    function updateAverageSentiment(zip){\n\n        if (zip.hasOwnProperty(\"avgSentimentScoreGuest\")){\n\n            var sentiment = Number(zip.avgSentimentScoreGuest);\n            if (sentiment <= 0.2){\n                $('#average-sentiment').attr(\"src\", \"public/img/dissatisfied_sentiment.svg\");\n            }\n            else if (sentiment > 0.2 && sentiment < 0.7){\n                $('#average-sentiment').attr(\"src\", \"public/img/neutral_sentiment.svg\");\n            }\n            else{\n                $('#average-sentiment').attr(\"src\", \"public/img/satisfied_sentiment.svg\");\n            }\n\n        }\n    }\n\n    function renderChart(zip_data){\n\n        // clear the previous chart\n        $('.sentiment-engagement-chart').html(\"\");\n\n        const chartTemplate = Handlebars.templates.chart;\n        const chart_html = chartTemplate({});\n        $('.sentiment-engagement-chart').append(chart_html);\n\n        var chart_config = {\n            xAxes: [{\n                type: 'time',\n                time: {\n                    unit: 'minute',\n                    stepSize: 10\n                }\n            }],\n            yAxes: [{\n                gridLines: {\n                    display: false\n                },\n                ticks: {\n                    max: 100,\n                    min: 0,\n                    stepSize: 25\n                }\n            }]\n        };\n\n        var event = new CustomEvent(\"createChart\", {\n                detail: {zip: zip_data, config: chart_config}\n        });\n        window.dispatchEvent(event);\n    }\n\n    function reset(){\n        $('.outliers-data-tbody').html(\"\");\n        $('.questions-data-tbody').html(\"\");\n        $('.notes-data-tbody').html(\"\");\n        $('.bookmark-data-tbody').html(\"\");\n        $('.capture-moments-data').html(\"\");\n    }\n\n    function processData(data){\n        updateMeetingData(data);\n        updateBookmarks(data);\n        updateCapturedImages(data);\n        updateNotes(data);\n        updateQuestions(data);\n        updateSentimentOutliers(data);\n\n        updateCallDuration(data);\n        updateAverageEngagementScore(data);\n        updateAverageSentiment(data);\n    }\n\n    window.addEventListener(\"update-dashboard\", function(evt){\n        var zip_data = evt.detail;\n        reset();\n        processData(zip_data);\n\n        if (zip_data.offset == 1){\n            $('.negative-time-msg').show();\n        }\n        else {\n            $('.negative-time-msg').hide();\n        }\n    });\n\n    window.addEventListener(\"dashboard-data\", function(evt){\n        var data = evt.detail;\n\n        console.log(\" dashboard data : \", data);\n\n        var zip_data = data.zip;\n        var recording_data = data.recording;\n        var notes_data = data.notes;\n\n        reset();\n\n        if (!isEmpty(zip_data)){\n            processData(zip_data);\n\n            // if recording url is null, create a chart and show here\n            if (recording_data.url == null){\n                if ($('.sentiment-engagement-chart').length){\n                    renderChart(zip_data);\n                }\n            }\n            \n            \n        }\n        else if (!isEmpty(notes_data)){\n            processData(notes_data);\n        }\n\n        if (recording_data.url !== null){\n\n            var mediaContext = {\n                chart: false,\n                url: recording_data.url\n            }\n\n            if (zip_data.hasOwnProperty(\"engagement_scores\") || zip_data.hasOwnProperty(\"avgSentimentScoreGuest\")){\n                mediaContext.chart = true;\n            }\n\n            const mediaPlayerTemplate = Handlebars.templates.mediaPlayer;\n            const media_html = mediaPlayerTemplate({\n                \"url\": recording_data.url,\n                \"chart\": mediaContext.chart\n            });\n\n            $('.recording').html(media_html);\n\n            // forward message to dashboard\n            var event = new CustomEvent(\"initializePlayer\", {\n                detail: data\n            });\n            window.dispatchEvent(event);\n\n        }\n\n        window.removeEventListener(\"dashboard-data\", function(evt){\n            console.log(\"dashboard-data event removed\");\n        });\n\n    });\n</script>";
},"useData":true});
templates['mediaPlayer'] = template({"1":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"sentiment-engagement-chart-video col-xs-8 col-xs-offset-1\"></div>\n";
},"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<style>\n\n.player {\n  position: relative;\n  font-size: 0;\n  overflow: hidden;\n  padding-right: 0px;\n  padding-left: 0px;\n}\n\n.player__button {\n  background:none;\n  border:0;\n  line-height:1;\n  color:white;\n  text-align: center;\n  outline:0;\n  padding: 0;\n  cursor:pointer;\n  max-width:50px;\n}\n\n.player__controls {\n  position: absolute;\n  width: 100%;\n  height: 50px;\n  transition:all .3s;   \n  flex-wrap:wrap;\n  background:rgba(0,0,0,0.1);\n  margin-top: -50px;\n}\n\n.progress {\n  flex:10;\n  position: relative;\n  display:flex;\n  flex-basis:100%;\n  margin-bottom: 0px;\n  height:16px;\n  transition:height 0.3s;\n  background:white;\n  border-radius:15px;\n  border:2px solid white;\n  padding-left: 0px;\n  padding-right: 0px;\n  cursor:pointer;\n  margin-top: 8px;\n}\n\n.progress__filled {\n  width:50%;\n  background:#1E90FF;\n  flex:0;\n  flex-basis:0.5%;\n}\n\n.markers{\n    margin-top: -70px;\n    display: flex;\n    height: 20px;\n    overflow: hidden;\n}\n\n.progress__time{\n    color: white;\n    font-family: \"Inter-Regular\";\n    font-size: 16px;\n    margin-top:4px;\n}\n\n.settings-container{\n    background-color: white;\n    color: black;\n    font-family: \"Inter-Regular\";\n    font-size: 14px;\n    border-radius: 4px;\n    width: 264px;\n    height:102px;\n    position: absolute;\n    right: 10px;\n    bottom:75px;\n}\n.sentiment-engagement-chart-video{\n    height: 100px;\n    margin-top: -180px;\n    padding-left: 0px;\n    padding-right: 0px;\n}\n\n.progress__line{\n    height:155px;\n    z-index:99999;\n    bottom: 26px;\n    position: absolute;\n    border: 1px solid white;\n    margin-top: -150px;\n}\n\n.settings-with-error{\n    height:140px;\n}\n\n.offset-error-msg{\n    font-family: \"Inter-Bold\";\n    font-size: 14px;\n    color: #1E90FF;\n    display: none;\n}\n\n</style>\n\n<div class=\"row\">\n    <div class=\"col-xs-12 player\">\n        <video width=\"100%\" height=\"100%\" class=\"viewer\" id=\"recording-video\" src=\""
    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,"url") || (depth0 != null ? lookupProperty(depth0,"url") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"url","hash":{},"data":data,"loc":{"start":{"line":114,"column":83},"end":{"line":114,"column":90}}}) : helper)))
    + "\"></video>\n\n        <div class=\"settings-container\" state=\"inactive\" style=\"display: none;\">\n            <div class=\"clearfix\">\n                <div class=\"col-xs-12\" style=\"margin-top: 5px;\">\n                    <span class=\"offset-error-msg\"></span>\n                </div>\n            </div>\n            <div class=\"clearfix\">\n                <div class=\"form-group\" style=\"margin-top:4%;margin-bottom:4%;\">\n                    <div class=\"col-xs-10\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input custom-checkbox\" type=\"checkbox\" id=\"show-metrics\" checked>\n                            <label class=\"form-check-label\" for=\"show-metrics\">\n                            Show call metrics\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clearfix\">\n                <div class=\"form-group\" style=\"margin-top:4%;margin-bottom:4%;\">\n                    <label  style=\"margin-top:6px;\" class=\"col-xs-5 col-form-label\" for=\"setting-time-offset\">Time offset: </label>\n                    <div class=\"col-xs-5\" style=\"padding-left: 0px;padding-right:0px;\">\n                        <input id=\"setting-time-offset\" placeholder=\"hh:mm:ss\" type=\"text\" class=\"form-control\">\n                    </div>\n\n                    <img id=\"video-settings-apply\" style=\"cursor:pointer;margin-left:8px;margin-top:6px\" width=\"24\" height=\"24\" src=\"public/img/check.svg\">\n                </div>\n            </div>\n        </div>\n        \n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,(depth0 != null ? lookupProperty(depth0,"chart") : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":15}}})) != null ? stack1 : "")
    + "\n        <div class=\"clearfix vertical-line-container\">\n            <div class=\"col-xs-8 col-xs-offset-1\" style=\"padding-right:0px;padding-left:0px\">\n                <div class=\"progress__line\"></div>\n            </div>\n        </div>\n\n        <div class=\"clearfix marker-container\">\n            <div class=\"markers col-xs-8 col-xs-offset-1\"></div>\n        </div>\n\n        <div class=\"player__controls clearfix\">\n            <icon style=\"cursor: pointer;text-align:center\" class=\"toggle col-xs-1\">\n                <img width=\"32\" height=\"32\" src=\"public/img/play.svg\">\n            </icon>\n            <div class=\"progress col-xs-8\">\n                <div class=\"progress__filled\"></div>\n            </div>\n\n            <div class=\"col-xs-2 progress__time\">\n                <span class=\"progress__time__current_time\">00:00:00</span>\n                <span> / </span>\n                <span class=\"progress__time__duration\">00:00:00</span>\n            </div>\n\n            <div class=\"col-xs-1\">\n                <icon class=\"video-settings\" style=\"cursor:pointer; text-align:center;\" inactive>\n                    <img width=\"20\" height=\"30\" src=\"public/img/settings.svg\">\n                </icon>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    class MediaPlayer{\n        constructor(conf){\n\n            this.pause_icon = \"public/img/play.svg\";\n            this.play_icon = \"public/img/stop.svg\";\n\n            this.zip_data = {};\n\n            this.conf = conf;\n\n            this.player = document.querySelector('.' + this.conf.player_cls);\n            this.video = this.player.querySelector('.' + this.conf.video_cls);\n            this.progress_container = this.player.querySelector('.' + this.conf.progress_container_cls);\n            this.progress_filled_container = this.player.querySelector('.' + this.conf.progress_filled_container_cls);\n            this.toggle_icon = this.player.querySelector('.' + this.conf.toggle_cls); \n            this.marker_cls = this.player.querySelector('.' + this.conf.marker_cls);\n\n            this.settings_icon = $('.' + this.conf.settings.icon_cls);\n            this.settings_icon_container = $(\".\" + this.conf.settings.container_cls);\n            this.settings_apply_icon = $(\"#\" + this.conf.settings.apply_icon);\n\n            this.show_metrics = true;\n            this.recording_start_time = null;\n\n            // negative offset means recording started before plugin and positive otherwise\n            this.offset = 0; // 0 is no offset, -1 is negative offset, +1 is positive offset\n            this.offset_in_ms = 0;\n        }\n\n        setZipData(zip_data){\n            this.zip_data = zip_data;\n        }\n\n        getVideo(){\n            return this.video;\n        }\n\n        settingsToggle(){\n            var current_state = this.settings_icon_container.attr(\"state\");\n            if (current_state == \"active\"){\n                this.settings_icon_container.hide();\n                this.settings_icon_container.attr(\"state\", \"inactive\");\n            }\n            else {\n                this.settings_icon_container.show();\n                this.settings_icon_container.attr(\"state\", \"active\");\n            }\n        }\n\n        play(){\n            this.video.play();\n        }\n\n        pause(){\n            this.video.pause();\n        }\n\n        updatePlayPauseButtonIcon(play){\n\n            if (play){\n                $('.' + this.conf.toggle_cls + \" img\").attr(\"src\", this.play_icon);\n            }\n            else{\n                $('.' + this.conf.toggle_cls + \" img\").attr(\"src\", this.pause_icon);\n            }\n        }\n\n        togglePlay(){\n\n            if (this.video.paused){\n                this.play();\n                this.updatePlayPauseButtonIcon(true);\n            }\n            else{\n                this.pause();\n                this.updatePlayPauseButtonIcon(false);\n            }\n        }\n\n        formatTime(seconds){\n            var diff = seconds;\n            var ss = diff % 60;\n            diff = (diff - ss) / 60;\n            var mm = diff % 60;\n            diff = (diff - mm) / 60;\n            var hh = diff % 24;\n\n            var formatted_hh = (\"0\" + hh).slice(-2).toString();\n            var formatted_mm = (\"0\" + mm).slice(-2).toString();\n            var formatted_ss = (\"0\" + Math.round(ss)).slice(-2).toString();\n\n            return formatted_hh + \":\" + formatted_mm + \":\" + formatted_ss;\n           \n        }\n\n        moveProgressLine(percent){\n            $('.' + this.conf.progress__line).css(\"left\", percent + \"%\");\n        }\n\n        progressClickedHandler(e){\n            const scrubTime = (e.offsetX / this.progress_container.offsetWidth) * this.video.duration;\n            this.video.currentTime = scrubTime;\n\n            const percent = (this.video.currentTime / this.video.duration) * 100; \n            this.moveProgressLine(percent);\n            this.showVideoCurrentTime();\n        }\n\n        videoTimeUpdated(){\n            const percent = (this.video.currentTime / this.video.duration) * 100; \n            this.progress_filled_container.style.flexBasis = `${percent}%`;\n\n            this.moveProgressLine(percent);\n            this.showVideoCurrentTime();\n        }\n\n        showVideoCurrentTime(){\n            var formated_current_time = this.formatTime(this.video.currentTime);\n            $('.'+ this.conf.progress__time__current_time).text(formated_current_time);\n        }\n\n        showVideoDuration(){\n            var formated_duration = this.formatTime(this.video.duration);\n            $('.'+ this.conf.progress__time__duration).text(formated_duration);\n        }\n\n        addMarkersOnProgressBar(){\n            var _this = this;\n            var el = $('.' + _this.conf.marker_cls);\n\n            // clear previous markers\n            el.html(\"\");\n    \n            var _this = this;\n            var all_notes = this.zip_data.notes;\n            all_notes.forEach(function(note){\n\n                var seconds_elapsed = (note.event_time - _this.recording_start_time) / 1000 ;\n\n                // only render those between the recording duration\n                if (seconds_elapsed >= 0 && seconds_elapsed <= _this.video.duration){\n                    var positionToPlace = (seconds_elapsed / _this.video.duration) * 100 + '%';\n                    var img_src = \"public/img/\";\n\n                    if (note.type == \"bookmark\"){\n                        img_src += \"bookmark.svg\";\n                    }\n                    else if (note.type == \"image\"){\n                        img_src += \"capture.svg\";\n                    }\n                    else{\n                        img_src += \"notes.svg\";\n                    }\n\n                    // create a div\n                    var html = \"<div style='position:absolute;left:\"+ positionToPlace +\"'><img src='\" + img_src + \"'</div>\";\n\n                    el.append(html);\n                }\n            });\n        }\n\n        videoEnded(){\n           $('.' + this.conf.toggle_cls + \" img\").attr(\"src\", this.pause_icon);\n        }\n\n        getCallMetricCheckboxStatus(){\n            var status = $(\"#\" + this.conf.settings.metric_id + \":checkbox:checked\").length > 0;\n            return status;\n        }\n\n        hideChartsContainer(){\n            $('.' + this.conf.chart_container_cls).hide();\n            $('.' + this.conf.progress__line).hide();\n        }\n\n        showChartsContainer(){\n            $('.' + this.conf.chart_container_cls).show();\n            $('.' + this.conf.progress__line).show();\n        }\n\n        calculateOffsetInMilliSeconds(hh, mm, ss){\n            var offset_in_ms = (hh*60*60 + mm * 60 + ss) * 1000;\n            this.offset_in_ms = offset_in_ms;\n        }\n\n        setRecordingStartTime(){\n\n            // recording initially should be the same as meeting start because\n            // we are not doing relative movement (to the previous one)\n            this.recording_start_time = this.zip_data.start_time;\n\n            if (this.offset == -1){\n                this.recording_start_time = this.zip_data.start_time - this.offset_in_ms;\n            }\n            else if (this.offset == 1){\n                this.recording_start_time = this.zip_data.start_time + this.offset_in_ms;\n            }\n            else{\n                this.recording_start_time = this.zip_data.start_time;\n            }\n\n        }\n\n\n        updateNotesData(){\n            var notes = this.zip_data.notes;\n            var updated_notes = [];\n\n            var _this = this;\n            notes.forEach(function(nd){\n\n                var event_time;\n\n                if (_this.offset == 1){\n                    event_time = nd.event_time - _this.offset_in_ms;\n                }\n                else if (_this.offset == -1){\n                    event_time =  nd.event_time + _this.offset_in_ms;\n                }\n                else{\n                    event_time = nd.event_time;\n                }\n\n                var obj = {\n                    event_time: event_time,\n                    type: nd.type,\n                    content: nd.content\n                }\n               \n                updated_notes.push(obj);\n            });\n\n            return updated_notes;\n        }\n\n        updateQuestionsAskedData(){\n            var questionsAsked = this.zip_data.questionsAsked;\n            var updated_questions = [];\n\n            var _this = this;\n            questionsAsked.forEach(function(qd){\n                var time;\n                if (_this.offset == 1){\n                    time = qd.time - _this.offset_in_ms;\n                }\n                else if (_this.offset == -1){\n                    time =  qd.time + _this.offset_in_ms;\n                }\n                else{\n                    time = qd.time;\n                }\n\n                var obj = {\n                    origin: qd.origin,\n                    time: time,\n                    question: qd.question\n                }\n\n                updated_questions.push(obj);\n\n            });\n\n            return updated_questions;\n        }\n\n        filterData(data_arr, start_time){\n            var _this = this;\n            var filtered_arr = data_arr.filter(function(d){\n                return ((start_time + d[0]) >= _this.recording_start_time);\n            });\n\n            return filtered_arr;\n        }\n\n        addEmptyData(data_arr, start_time, is_engagement, add){\n\n            var _this = this;\n            var new_arr = [];\n\n            var sampleRate_in_ms = 1*1000; //1 sec\n            var count = 1;\n\n            var current_time = this.recording_start_time;\n\n            if (add){\n\n                // add null samples till current time doesnt reach meeting start time\n                while(current_time < start_time){\n\n                    var time_in_ms = count*sampleRate_in_ms;\n\n                    current_time = this.recording_start_time + time_in_ms;\n\n                    if (is_engagement){\n                        new_arr.push([time_in_ms, null]);\n                    }\n                    else{\n                        new_arr.push([time_in_ms, null, null]);\n                    }\n                    \n                    count += 1;\n                }\n            }\n            var updated_time_arr = [];\n\n            data_arr.forEach(function(d){\n                var item = [];\n                item[0] = d[0] + _this.offset_in_ms;\n                item[1] = d[1];\n\n                if (!is_engagement){\n                    item[2] = d[2];\n                }\n\n                updated_time_arr.push(item);\n            });\n\n            // add remaining data arr\n            new_arr.push(...updated_time_arr);\n\n            return new_arr;\n        }\n        \n        checkOffsetDurationRight(){\n            \n            // check if offset duration is correct\n            if (this.offset_in_ms >= (this.video.duration * 1000)){\n                return {\n                    status: false,\n                    msg: \"Offset outside of video duration - Not Allowed\"\n                };\n            }\n            else{\n                return {\n                    status: true,\n                    msg: ''\n                };\n            }\n        }\n\n        validateOffset(offset_string){\n\n            var validated_offset_data = {\n                status: true,\n                msg: ''\n            };\n\n            var offset_arr = offset_string.split(\":\");\n\n            if (offset_arr.length !== 3){\n                validated_offset_data = {\n                    status: false,\n                    msg: \"Entered offset format is incorrect. Valid format is hh:mm:ss\"\n                }\n\n                return validated_offset_data;\n            }\n            else {\n                var entered_hh = offset_arr[0];\n                var entered_mm = offset_arr[1];\n                var entered_ss = offset_arr[2];\n\n                // 3 because it can have a negative sign\n                if (entered_hh.length !== 3 && entered_hh.length !== 2){\n                    validated_offset_data = {\n                        status: false,\n                        msg: \"Hour offset is incorrect. Valid format is hh:mm:ss\"\n                    }\n\n                    return validated_offset_data;\n                }\n\n                if (entered_hh.length === 3){\n\n                    // only -ve sign allowed for hh when length is 3\n                    if (entered_hh[0] !== \"-\"){\n                        validated_offset_data = {\n                            status: false,\n                            msg: \"Hour offset is incorrect. Valid format is hh:mm:ss\"\n                        }\n\n                        return validated_offset_data;\n                    }\n\n                }\n\n                if (entered_mm.length !== 2){\n                    validated_offset_data = {\n                        status: false,\n                        msg: \"Minute offset is incorrect. Valid format is hh:mm:ss\"\n                    }\n\n                    return validated_offset_data;\n                }\n\n                if (entered_ss.length !== 2){\n                    validated_offset_data = {\n                        status: false,\n                        msg: \"Seconds offset is incorrect. Valid format is hh:mm:ss\"\n                    }\n\n                    return validated_offset_data;\n                }\n            }\n\n            return validated_offset_data;\n\n        }\n\n        showOffsetError(data){\n            var _this = this;\n            var error_msg = data.msg;\n\n            // increase settings container height to \n            _this.settings_icon_container.addClass(\"settings-with-error\");\n            $('.' + _this.conf.settings.offset_error).show();\n            $('.' + _this.conf.settings.offset_error).text(error_msg);\n\n            setTimeout(function(){\n                $('.' + _this.conf.settings.offset_error).text(\"\");\n                $('.' + _this.conf.settings.offset_error).hide();\n                _this.settings_icon_container.removeClass(\"settings-with-error\");\n            }, 2000);\n\n        }\n\n        //TODO: add proper check for keys\n        createNewZipData(){\n\n            var new_zip = {\n                offset: this.offset,\n                start_time: this.zip_data.start_time,\n                end_time: this.zip_data.end_time,\n                avgSentimentScoreGuest: this.zip_data.avgSentimentScoreGuest,\n                avgSentimentScoreHost: this.zip_data.avgSentimentScoreHost,\n                conv_id: this.zip_data.conv_id,\n                meeting_id: this.zip_data.meeting_id,\n                questionsAsked: this.updateQuestionsAskedData(),\n                engagement_scores: {\n                    avg_engagement_score: this.zip_data.engagement_scores.avg_engagement_score,\n                    engagement_scores: []\n                },\n                highSentimentSentences: {\n                    highSentimentSentencesHost: this.zip_data.highSentimentSentences.highSentimentSentencesHost,\n                    highSentimentSentencesGuest: []\n                },\n                lowSentimentSentences: {\n                    lowSentimentSentencesHost: this.zip_data.lowSentimentSentences.lowSentimentSentencesHost,\n                    lowSentimentSentencesGuest: []\n                },\n                notes: this.updateNotesData()\n            }\n\n            if (this.offset == -1){\n                var start_time = this.zip_data.start_time;\n                var engagement_scores = this.addEmptyData(this.zip_data.engagement_scores.engagement_scores, start_time, true, true);\n                var highSentimentSentencesGuest = this.addEmptyData(this.zip_data.highSentimentSentences.highSentimentSentencesGuest, start_time, false, true);\n                var lowSentimentSentencesGuest = this.addEmptyData(this.zip_data.lowSentimentSentences.lowSentimentSentencesGuest, start_time, false, false);\n\n                new_zip.engagement_scores.engagement_scores = engagement_scores;\n                new_zip.highSentimentSentences.highSentimentSentencesGuest = highSentimentSentencesGuest;\n                new_zip.lowSentimentSentences.lowSentimentSentencesGuest = lowSentimentSentencesGuest;\n\n            }\n            else if (this.offset == 1){\n                var start_time = this.zip_data.start_time;\n                var engagement_scores = this.filterData(this.zip_data.engagement_scores.engagement_scores, start_time);\n                var highSentimentSentencesGuest = this.filterData(this.zip_data.highSentimentSentences.highSentimentSentencesGuest, start_time);\n                var lowSentimentSentencesGuest = this.filterData(this.zip_data.lowSentimentSentences.lowSentimentSentencesGuest, start_time);\n\n                new_zip.engagement_scores.engagement_scores = engagement_scores;\n                new_zip.highSentimentSentences.highSentimentSentencesGuest = highSentimentSentencesGuest;\n                new_zip.lowSentimentSentences.lowSentimentSentencesGuest = lowSentimentSentencesGuest;\n\n            }\n            else{\n                new_zip = this.zip_data;\n            }\n\n\n            return new_zip;\n        }\n\n        plotChart(zip_data){\n            var new_zip = this.createNewZipData(zip_data);\n            this.renderChartOnVideo(new_zip);\n        }\n\n        renderMarkers(zip_data){\n            this.addMarkersOnProgressBar(zip_data);\n        }\n\n        processOffsetValue(offset_string){\n\n            var processing_ok = false;\n\n            var offset_validated_data =  this.validateOffset(offset_string);\n\n            if (offset_validated_data.status){\n                var offset_arr = offset_string.split(\":\");\n                var entered_hh = offset_arr[0];\n                var entered_mm = offset_arr[1];\n                var entered_ss = offset_arr[2];\n\n                var hh = (\"0\" + entered_hh).slice(-2);\n                var mm = (\"0\" + entered_mm).slice(-2);\n                var ss = (\"0\" + entered_ss).slice(-2);\n\n                var hh_number = Number(offset_arr[0].slice(-2));\n                var mm_number = Number(offset_arr[1].slice(-2));\n                var ss_number = Number(offset_arr[2].slice(-2));\n\n                if (entered_hh[0] == \"-\"){\n                    this.offset = -1;\n                }\n                else{\n                    if (hh_number > 0 || mm_number > 0 || ss_number > 0) {\n                        this.offset = 1;\n                    }\n                    else{\n                        this.offset = 0;\n                    }\n                }\n\n                this.calculateOffsetInMilliSeconds(hh_number, mm_number, ss_number);\n                var offset_duration_check_data = this.checkOffsetDurationRight();\n\n                if (offset_duration_check_data.status){\n                    processing_ok = true;\n                }\n                else{\n                    this.showOffsetError(offset_duration_check_data);\n                }\n\n            }\n            else{\n                 this.showOffsetError(offset_validated_data);\n            }\n\n            return processing_ok;\n        }\n\n        registerSettingsEvents(){\n            var _this = this;\n            this.settings_icon.on(\"click\", function(evt){\n                _this.settingsToggle();\n            });\n\n\n            $('#' + _this.conf.settings.metric_id).change(function(){\n\n                if (this.checked){\n                    _this.showChartsContainer();\n                }\n                else{\n                    _this.hideChartsContainer();\n                }\n            });\n\n            this.settings_apply_icon.on(\"click\", function(evt){\n\n                // get the timeoffset\n                var offset = $('#'+ _this.conf.settings.offset_id).val();\n\n                if (offset){\n                    var offset_ok = _this.processOffsetValue(offset);\n\n                    // if only offset is valid\n                    if (offset_ok){\n                        _this.setRecordingStartTime();\n\n                        var new_zip = _this.createNewZipData();\n                        _this.plotChart(new_zip);\n                        _this.addMarkersOnProgressBar();\n\n                        // forward message to dashboard\n                        var event = new CustomEvent(\"update-dashboard\", {\n                            detail: new_zip\n                        });\n                        window.dispatchEvent(event);\n                    }\n                }\n            });\n        }\n\n        registerEvents(){\n            var _this = this;\n            this.video.addEventListener(\"click\", _this.togglePlay.bind(_this));\n            this.toggle_icon.addEventListener(\"click\", _this.togglePlay.bind(_this));\n            this.video.addEventListener(\"timeupdate\", _this.videoTimeUpdated.bind(_this));\n            this.video.addEventListener(\"ended\", _this.videoEnded.bind(_this));\n            this.progress_container.addEventListener(\"click\", _this.progressClickedHandler.bind(_this));\n\n            if (this.conf.settings){\n                this.registerSettingsEvents();\n            }\n        }\n\n        getChartConfig(){\n            var config = {\n                xAxes: [{\n                    type: 'time',\n                    gridLines: {\n                        display: false\n                    },\n                    ticks: {\n                        display: false\n                    }\n                }],\n                yAxes: [{\n                    gridLines: {\n                        display: false\n                    },\n                    ticks: {\n                        display: false\n                    }\n                }]\n            };\n            return config;\n        }\n\n        renderChartOnVideo(zip_data){\n            $('.' + this.conf.chart_container_cls).html(\"\");\n            const chartConf = this.getChartConfig();\n            const canvasStyle = {\n                \"background-color\": \"rgb(255,255,255,0.4)\"\n            }\n            const chartTemplate = Handlebars.templates.chart;\n            const chart_html = chartTemplate({});\n            $('.' + this.conf.chart_container_cls).append(chart_html);\n\n            var event = new CustomEvent(\"createChart\", {\n                    detail: {zip: zip_data, config: chartConf, style: canvasStyle}\n            });\n            window.dispatchEvent(event);\n        }\n    }\n\n    window.addEventListener(\"initializePlayer\", function(evt){\n        var data = evt.detail;\n        var conf = {\n            player_cls: \"player\",\n            video_cls: \"viewer\",\n            progress_container_cls: \"progress\",\n            progress_filled_container_cls: \"progress__filled\",\n            toggle_cls: \"toggle\",\n            marker_cls: \"markers\",\n            progress__time__duration: \"progress__time__duration\",\n            progress__time__current_time: \"progress__time__current_time\",\n            progress__line: \"progress__line\",\n            settings: {\n                icon_cls: \"video-settings\",\n                container_cls: \"settings-container\",\n                offset_id: \"setting-time-offset\",\n                offset_error: \"offset-error-msg\",\n                metric_id: \"show-metrics\",\n                apply_icon: \"video-settings-apply\"\n            },\n            chart_container_cls: \"sentiment-engagement-chart-video\"\n        };\n\n        var zip_data = data.zip;\n\n        if (!isEmpty(zip_data)){\n\n            const player = new MediaPlayer(conf);\n\n            // set player zip data\n            player.setZipData(zip_data);\n\n            // set the recording start time (will match the meeting start time without offset)\n            player.setRecordingStartTime();\n\n            // register player events\n            player.registerEvents();\n\n            // render chart\n            player.renderChartOnVideo(zip_data);\n\n            var video = player.getVideo();\n\n            // video is loaded, add duration data and markers\n            video.onloadedmetadata = function(){\n                player.showVideoDuration();\n                player.addMarkersOnProgressBar();\n                delete player;\n            }\n        }\n        else{\n             delete player;\n        }\n\n        window.removeEventListener(\"initializePlayer\", function(evt){\n            console.log(\" initializePlayer event removed \");\n        });\n    });\n  \n</script>";
},"useData":true});
templates['upload'] = template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<style>\n    .file-upload{\n        color: #1E90FF;\n        border: 2px solid #1E90FF;\n        padding: 5px;\n    }\n\n    #file-zip, #file-recording{\n        opacity: 0;\n\n        height: 0.1px;\n        z-index: -1;\n    }\n\n    .upload-container{\n        margin-top: 1%;\n        width: 90%;\n        height: 312px;\n        border-radius: 5px;\n    }\n\n    .upload-container .heading{\n        margin-top: 40px;\n        \n    }\n    .upload-files{\n        margin-top: 20px;\n    }\n\n    .custom-btn{\n        background-color:  #1E90FF;\n        color: white;\n        border: 2px solid #1E90FF;\n        border-radius: 5px;\n        padding: 5px;\n    }\n\n    .upload-el{\n         margin-top: 26px;\n    }\n\n\n</style>\n\n<div class=\"upload-container has-shadow col-md-10\">\n   <div class=\"heading\">\n       <h4>Upload meeting data to view</h4>\n   </div>\n\n    <div class=\"upload-files\">\n        <div class=\"upload-el\">\n            <input type=\"file\" id=\"file-zip\" name=\"file-zip\" multiple />\n            <label for=\"file-zip\" class=\"file-upload\">\n                <span>Select meeting data (.zip)</span>\n                <img src=\"public/img/upload_icon.svg\">\n            </label>\n        </div>\n\n        <div class=\"upload-el\">\n            <input type=\"file\" id=\"file-recording\" name=\"file-recording\" multiple />\n            <label for=\"file-recording\" class=\"file-upload\">\n                <span>Optional - Select recording (.mp4)</span>\n                <img src=\"public/img/upload_icon.svg\">\n            </label>\n        </div>\n\n        <div class=\"upload-el\">\n            <button onclick=\"uploadSubmit();\" class=\"custom-btn\">View meeting<img style=\"margin-left:8px;\" src=\"public/img/next_icon.svg\"></button>\n        </div>\n       \n    </div>\n</div>\n<script src=\"public/scripts/jszip.js\"></script>\n<script>\n\n    var ZIP_DATA = {};\n    var NOTES_DATA = {};\n    var RECORDING_DATA = {\n        url: null,\n        type: null\n    };\n\n    // add js zip code here\n    function handleZipUpload(f){\n        JSZip.loadAsync(f).then(function(zip){\n\n            zip.forEach(function(file){\n\n                var name_arr = file.split(\"/\");\n                if (name_arr.length >= 1){\n                    var fileName = name_arr[name_arr.length - 1];\n                    if (fileName == \"processed.json\"){\n\n                        zip.file(file).async(\"text\").then(function(data){\n                            var json = JSON.parse(data);\n                            ZIP_DATA = json;\n                        });\n                    }\n\n                    if (fileName == \"input.json\"){\n\n                        zip.file(file).async(\"text\").then(function(data){\n                            var json = JSON.parse(data);\n                            NOTES_DATA = json;\n                        });\n                    }\n                }\n            })\n        });\n    };\n\n    function updateRecordingURL(file){\n        RECORDING_DATA.url =  URL.createObjectURL(file);\n        RECORDING_DATA.type = file.type;\n    };\n\n    $('#file-zip').on(\"change\", function(evt){\n\n        if (evt.target.files.length){\n            var file = evt.target.files[0];\n\n            handleZipUpload(file);\n\n        };\n    });\n\n    $('#file-recording').on(\"change\", function(evt){\n\n        if (evt.target.files.length){\n            var file = evt.target.files[0];\n\n            updateRecordingURL(file);\n        };\n\n    });\n\n\n    function uploadSubmit(){\n\n        // file to dashboard handlebar\n        var event = new CustomEvent(\"dashboard\", {\n            detail: {zip: ZIP_DATA, recording: RECORDING_DATA, notes: NOTES_DATA}\n        });\n\n        window.dispatchEvent(event);\n    }\n</script>\n";
},"useData":true});
})();