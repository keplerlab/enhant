FROM debian:10.4

ARG KALDI_MKL

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        g++ \
        gfortran \
        bzip2 \
        unzip \
        make \
        wget \
        git \
        zlib1g-dev \
        patch \
        ca-certificates \
        swig \
        cmake \
        xz-utils \
    && rm -rf /var/lib/apt/lists/*


#Install MINICONDA
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda.sh && \
	/bin/bash Miniconda.sh -b -p /opt/conda && \
	rm Miniconda.sh

ENV PATH /opt/conda/bin:$PATH
RUN conda install python=3.7

RUN \
    git clone -b lookahead --single-branch https://github.com/alphacep/kaldi /opt/kaldi \
    && cd /opt/kaldi/tools \
    && sed -i 's:status=0:exit 0:g' extras/check_dependencies.sh \
    && sed -i 's:openfst_add_CXXFLAGS = -g -O2:openfst_add_CXXFLAGS = -g -O3 -msse2:g' Makefile \
    && sed -i 's:--enable-ngram-fsts:--enable-ngram-fsts --disable-bin:g' Makefile \
    && make -j $(nproc) openfst cub \
    && if [ "x$KALDI_MKL" != "x1" ] ; then \
          sed -i 's:python:python:g' extras/install_openblas.sh; \
          sed -i 's:USE_LOCKING=1:DYNAMIC_ARCH=1 USE_LOCKING=1:g' extras/install_openblas.sh; \
          extras/install_openblas.sh; \
       else \
          extras/install_mkl.sh; \
       fi \
    \
    && cd /opt/kaldi/src \
    && if [ "x$KALDI_MKL" != "x1" ] ; then \
          ./configure --mathlib=OPENBLAS --shared; \
       else \
          ./configure --mathlib=MKL --shared; \
       fi \
    && sed -i 's:-msse -msse2:-msse -msse2:g' kaldi.mk \
    && sed -i 's: -O1 : -O3 :g' kaldi.mk \
    && make -j $(nproc) online2 lm \
    \
    && git clone https://github.com/alphacep/vosk-api /opt/vosk-api \
    && cd /opt/vosk-api/python \
    && KALDI_MKL=$KALDI_MKL KALDI_ROOT=/opt/kaldi python ./setup.py install --single-version-externally-managed --root=/ 

ENV MODEL_VERSION 0.2
RUN pip --no-cache-dir install websockets tensorflow==2.2.0 keras==2.3.1 deepsegment \
   && (echo "from deepsegment import DeepSegment" ; echo "segmenter = DeepSegment('en')" ) | python && \mkdir -p /opt/transcription_svc/vosk-model-en \
   && cd /opt/transcription_svc/vosk-model-en \
   && wget http://alphacephei.com/kaldi/models/vosk-model-en-us-aspire-${MODEL_VERSION}.zip \
   && unzip vosk-model-en-us-aspire-${MODEL_VERSION}.zip \
   && mv vosk-model-en-us-aspire-${MODEL_VERSION} model \
   && rm -rf vosk-model-en-us-aspire-${MODEL_VERSION}.zip

WORKDIR /opt/transcription_svc/websocket-server
EXPOSE 1111

CMD ["bash","start_transcription_kaldi_offline.sh"]
